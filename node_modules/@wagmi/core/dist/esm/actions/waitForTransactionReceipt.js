import { hexToString } from 'viem';
import { call, getTransaction, waitForTransactionReceipt as viem_waitForTransactionReceipt, } from 'viem/actions';
import {} from '../createConfig.js';
import {} from '../types/properties.js';
import {} from '../types/utils.js';
export async function waitForTransactionReceipt(config, parameters) {
    const { chainId, timeout = 0, ...rest } = parameters;
    const client = config.getClient({ chainId });
    const receipt = await viem_waitForTransactionReceipt(client, {
        ...rest,
        timeout,
    });
    if (receipt.status === 'reverted') {
        const txn = await getTransaction(client, { hash: receipt.transactionHash });
        const code = (await call(client, {
            ...txn,
            gasPrice: txn.type !== 'eip1559' ? txn.gasPrice : undefined,
            maxFeePerGas: txn.type === 'eip1559' ? txn.maxFeePerGas : undefined,
            maxPriorityFeePerGas: txn.type === 'eip1559' ? txn.maxPriorityFeePerGas : undefined,
        }));
        const reason = hexToString(`0x${code.substring(138)}`);
        throw new Error(reason);
    }
    return {
        ...receipt,
        chainId: client.chain.id,
    };
}
//# sourceMappingURL=waitForTransactionReceipt.js.map