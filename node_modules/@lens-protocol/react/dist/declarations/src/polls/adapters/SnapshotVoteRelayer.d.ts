import { TypedData } from '@lens-protocol/blockchain-bindings';
import { ISignedVote } from '@lens-protocol/domain/entities';
import { IPollVoteRelayer } from '@lens-protocol/domain/use-cases/polls';
import { EvmAddress, Url } from '@lens-protocol/shared-kernel';
export interface ISnapshotVote extends ISignedVote {
    voter: EvmAddress;
    data: TypedData;
}
export declare class SnapshotRelayError extends Error {
    name: "SnapshotRelayError";
}
export declare class SnapshotVoteRelayer implements IPollVoteRelayer {
    private readonly sequencer;
    constructor(sequencer: Url);
    relay({ data, pollId, signature, voter }: ISnapshotVote): Promise<void>;
}
