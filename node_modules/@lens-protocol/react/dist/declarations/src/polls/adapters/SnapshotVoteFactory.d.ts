import { SafeApolloClient, SnapshotSpaceId } from '@lens-protocol/api-bindings';
import { TypedData } from '@lens-protocol/blockchain-bindings';
import { AppId, IUnsignedVote, PollId } from '@lens-protocol/domain/entities';
import { CreateUnsignedVoteRequest, IUnsignedVoteFactory } from '@lens-protocol/domain/use-cases/polls';
export declare class UnsignedVote implements IUnsignedVote {
    readonly pollId: PollId;
    readonly typedData: TypedData;
    constructor(pollId: PollId, typedData: TypedData);
}
export declare class SnapshotVoteFactory implements IUnsignedVoteFactory {
    private readonly client;
    private readonly spaceId;
    private readonly appId?;
    constructor(client: SafeApolloClient, spaceId: SnapshotSpaceId, appId?: AppId | undefined);
    createUnsignedVote(request: CreateUnsignedVoteRequest): Promise<UnsignedVote>;
}
