'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var Apollo = require('@apollo/client');
var unsupportedIterableToArray = require('./unsupportedIterableToArray-262e2bcd.cjs.prod.js');
var context = require('@apollo/client/link/context');
var utilities = require('@apollo/client/utilities');
var sharedKernel = require('@lens-protocol/shared-kernel');
var entities = require('@lens-protocol/domain/entities');
var profile = require('@lens-protocol/domain/use-cases/profile');
var publications = require('@lens-protocol/domain/use-cases/publications');

function semVer(value) {
  // for now just asserts the type, in future it will enforce a format
  return value;
}

var LENS_API_MINIMAL_SUPPORTED_VERSION = semVer('2.0.0');

function chainType(chainId) {
  switch (chainId) {
    case 1:
    case 5:
      return sharedKernel.ChainType.ETHEREUM;
    case 137:
    case 80001:
    case 80002:
      return sharedKernel.ChainType.POLYGON;
    default:
      throw new Error("Not supported chainId: ".concat(chainId));
  }
}

/**
 * Convert an Amount returned from the Lens API to an Erc20Amount
 *
 * @param from - Amount returned from the Lens API
 * @returns Erc20Amount instance
 */
function erc20Amount(from) {
  var asset = from.asset,
    value = from.value;
  var erc20Asset = sharedKernel.erc20({
    name: asset.name,
    decimals: asset.decimals,
    symbol: asset.symbol,
    address: asset.contract.address,
    chainType: chainType(asset.contract.chainId)
  });
  return sharedKernel.Amount.erc20(erc20Asset, value);
}

/**
 * Convert a FiatAmount returned from the Lens API to a FiatAmount
 *
 * @param from - FiatAmount returned from the Lens API
 * @returns FiatAmount instance
 */
function fiatAmount(from) {
  var asset = from.asset,
    value = from.value;
  var fiatAsset = sharedKernel.fiat({
    name: asset.name,
    symbol: asset.symbol
  });
  return sharedKernel.Amount.fiat(fiatAsset, value);
}

var ModulesWithKnownCollectCapability = {
  LegacyAaveFeeCollectModuleSettings: true,
  LegacyERC4626FeeCollectModuleSettings: true,
  LegacyFeeCollectModuleSettings: true,
  LegacyLimitedFeeCollectModuleSettings: true,
  LegacyLimitedTimedFeeCollectModuleSettings: true,
  LegacyMultirecipientFeeCollectModuleSettings: true,
  LegacyTimedFeeCollectModuleSettings: true,
  LegacySimpleCollectModuleSettings: true,
  LegacyFreeCollectModuleSettings: true,
  MultirecipientFeeCollectOpenActionSettings: true,
  SimpleCollectOpenActionSettings: true,
  LegacyRevertCollectModuleSettings: false,
  UnknownOpenActionModuleSettings: false
};

/**
 * Given an open action module settings, determine if it is a collect module
 *
 * @experimental This function is not yet stable and may be removed in a future release
 */
function isCollectModuleSettings(settings) {
  var _ModulesWithKnownColl;
  return (_ModulesWithKnownColl = ModulesWithKnownCollectCapability[settings.__typename]) !== null && _ModulesWithKnownColl !== void 0 ? _ModulesWithKnownColl : false;
}

/**
 * Given a publication, find the collect module settings if any
 *
 * @experimental This function is not yet stable and may be removed in a future release
 */
function findCollectModuleSettings(collectable) {
  var _collectable$openActi, _collectable$openActi2;
  return (_collectable$openActi = (_collectable$openActi2 = collectable.openActionModules) === null || _collectable$openActi2 === void 0 ? void 0 : _collectable$openActi2.find(isCollectModuleSettings)) !== null && _collectable$openActi !== void 0 ? _collectable$openActi : null;
}
function isMultirecipientCollectFee(fee) {
  return 'recipients' in fee;
}
function isFreeCollectModuleSettings(module) {
  return module.__typename === 'LegacyFreeCollectModuleSettings';
}
function isMultirecipientCollectModuleSettings(module) {
  return module.__typename === 'MultirecipientFeeCollectOpenActionSettings' || module.__typename === 'LegacyMultirecipientFeeCollectModuleSettings';
}
function buildCollectFee(module) {
  if (isFreeCollectModuleSettings(module)) return undefined;
  var erc20 = erc20Amount(module.amount);
  if (erc20.isZero()) return undefined;
  var shared = {
    amount: erc20,
    rate: module.amount.rate ? fiatAmount(module.amount.rate) : undefined,
    referralFee: module.referralFee
  };
  if (isMultirecipientCollectModuleSettings(module)) {
    return unsupportedIterableToArray._objectSpread2(unsupportedIterableToArray._objectSpread2({}, shared), {}, {
      recipients: module.recipients
    });
  }
  return unsupportedIterableToArray._objectSpread2(unsupportedIterableToArray._objectSpread2({}, shared), {}, {
    recipient: module.recipient
  });
}

/**
 * Resolve API's {@link OpenActionModuleSettings} to more user friendly {@link CollectPolicy}.
 *
 * @param collectable - The {@link PrimaryPublication} to resolve {@link CollectPolicy} from
 * @returns {@link CollectPolicy}
 */
function resolveCollectPolicy(collectable) {
  var module = findCollectModuleSettings(collectable);
  if (!module) return null;
  var fee = buildCollectFee(module);
  var shared = {
    followerOnly: module.followerOnly,
    contract: module.contract
  };
  switch (module.__typename) {
    case 'LegacyAaveFeeCollectModuleSettings':
    case 'LegacyERC4626FeeCollectModuleSettings':
      {
        return unsupportedIterableToArray._objectSpread2(unsupportedIterableToArray._objectSpread2({}, shared), {}, {
          collectNft: null,
          collectLimit: module.collectLimit,
          endsAt: module.endsAt,
          fee: fee
        });
      }
    case 'LegacyLimitedFeeCollectModuleSettings':
    case 'LegacyLimitedTimedFeeCollectModuleSettings':
      {
        return unsupportedIterableToArray._objectSpread2(unsupportedIterableToArray._objectSpread2({}, shared), {}, {
          collectNft: module.collectNft,
          collectLimit: module.collectLimit,
          endsAt: null,
          fee: fee
        });
      }
    case 'LegacyFeeCollectModuleSettings':
    case 'LegacyTimedFeeCollectModuleSettings':
      {
        return unsupportedIterableToArray._objectSpread2(unsupportedIterableToArray._objectSpread2({}, shared), {}, {
          collectNft: module.collectNft,
          collectLimit: null,
          endsAt: null,
          fee: fee
        });
      }
    case 'LegacyFreeCollectModuleSettings':
      return unsupportedIterableToArray._objectSpread2(unsupportedIterableToArray._objectSpread2({}, shared), {}, {
        collectNft: module.collectNft,
        collectLimit: null,
        endsAt: null
      });
    case 'LegacyMultirecipientFeeCollectModuleSettings':
    case 'MultirecipientFeeCollectOpenActionSettings':
    case 'LegacySimpleCollectModuleSettings':
    case 'SimpleCollectOpenActionSettings':
      {
        return unsupportedIterableToArray._objectSpread2(unsupportedIterableToArray._objectSpread2({}, shared), {}, {
          collectNft: module.collectNft,
          collectLimit: module.collectLimit,
          endsAt: module.endsAt,
          fee: fee
        });
      }
    default:
      return null;
  }
}

function omitTypename(target) {
  return sharedKernel.omitDeep(target, '__typename');
}

var publicationIdRegExp = /^0x[a-f0-9]{2,}-0x[a-f0-9]{2,}/i;

/**
 * @group Helpers
 */
function isPublicationId(value) {
  return publicationIdRegExp.test(value);
}

/**
 * @group Helpers
 */
function isPostPublication(publication) {
  return publication.__typename === 'Post';
}

/**
 * @group Helpers
 */
function isCommentPublication(publication) {
  return publication.__typename === 'Comment';
}

/**
 * @group Helpers
 */
function isMirrorPublication(publication) {
  return publication.__typename === 'Mirror';
}

/**
 * @group Helpers
 */
function isQuotePublication(publication) {
  return publication.__typename === 'Quote';
}

/**
 * @group Helpers
 */
function isPrimaryPublication(publication) {
  return isCommentPublication(publication) || isPostPublication(publication) || isQuotePublication(publication);
}

function resolveTokenAllowanceRequestForCollect(publication, limit) {
  var module = findCollectModuleSettings(publication);
  sharedKernel.invariant(module, "Publication ".concat(publication.id, " has no collect module"));
  switch (module.__typename) {
    case 'LegacyAaveFeeCollectModuleSettings':
    case 'LegacyERC4626FeeCollectModuleSettings':
    case 'LegacyFeeCollectModuleSettings':
    case 'LegacyLimitedFeeCollectModuleSettings':
    case 'LegacyLimitedTimedFeeCollectModuleSettings':
    case 'LegacyMultirecipientFeeCollectModuleSettings':
    case 'LegacySimpleCollectModuleSettings':
    case 'LegacyTimedFeeCollectModuleSettings':
    case 'MultirecipientFeeCollectOpenActionSettings':
    case 'SimpleCollectOpenActionSettings':
      return {
        kind: entities.TransactionKind.APPROVE_MODULE,
        amount: erc20Amount(module.amount),
        limit: limit,
        spender: module.contract.address
      };
    default:
      sharedKernel.never("Unsupported collect module type ".concat(module.__typename));
  }
}
function resolveTokenAllowanceRequestForFollow(profile, limit) {
  sharedKernel.invariant(profile.followModule, "Profile ".concat(profile.id, " has no follow module"));
  switch (profile.followModule.__typename) {
    case 'FeeFollowModuleSettings':
      return {
        kind: entities.TransactionKind.APPROVE_MODULE,
        amount: erc20Amount(profile.followModule.amount),
        limit: limit,
        spender: profile.followModule.contract.address
      };
    default:
      sharedKernel.never("Unsupported follow module type ".concat(profile.followModule.__typename));
  }
}
function resolveTokenAllowanceRequest(item, limit) {
  switch (item.__typename) {
    case 'Mirror':
      return resolveTokenAllowanceRequestForCollect(item.mirrorOn, limit);
    case 'Comment':
    case 'Post':
    case 'Quote':
      return resolveTokenAllowanceRequestForCollect(item, limit);
    case 'Profile':
      return resolveTokenAllowanceRequestForFollow(item, limit);
    default:
      sharedKernel.assertNever(item);
  }
}

/**
 * Resolve API {@link FollowModule} to more user friendly {@link FollowPolicy}.
 *
 * @param args - The {@link Profile} to resolve {@link FollowPolicy} from
 * @returns {@link FollowPolicy}
 */
function resolveFollowPolicy(_ref) {
  var _ref2;
  var followModule = _ref.followModule;
  if (followModule === null) {
    return {
      type: profile.FollowPolicyType.ANYONE
    };
  }
  switch (followModule.__typename) {
    case 'FeeFollowModuleSettings':
      return {
        type: profile.FollowPolicyType.CHARGE,
        amount: erc20Amount(followModule.amount),
        rate: followModule.amount.rate ? fiatAmount(followModule.amount.rate) : null,
        recipient: followModule.recipient,
        contractAddress: followModule.contract.address,
        chainId: followModule.contract.chainId
      };
    case 'RevertFollowModuleSettings':
      return {
        type: profile.FollowPolicyType.NO_ONE,
        contractAddress: followModule.contract.address,
        chainId: followModule.contract.chainId
      };
    case 'UnknownFollowModuleSettings':
      return {
        type: profile.FollowPolicyType.UNKNOWN,
        contractAddress: followModule.contract.address,
        chainId: followModule.contract.chainId,
        initializeCalldata: followModule.initializeCalldata,
        initializeResultData: (_ref2 = followModule.initializeResultData) !== null && _ref2 !== void 0 ? _ref2 : undefined,
        signlessApproved: followModule.signlessApproved,
        sponsoredApproved: followModule.sponsoredApproved,
        verified: followModule.verified
      };
  }
}

/**
 * Given a {@link FollowPolicyConfig} resolve it to a {@link FollowModuleInput} to be used by the API.
 *
 * @internal
 */
function resolveFollowModuleInput(policy) {
  switch (policy.type) {
    case profile.FollowPolicyType.CHARGE:
      return {
        feeFollowModule: {
          amount: {
            currency: policy.amount.asset.address,
            value: policy.amount.toSignificantDigits()
          },
          recipient: policy.recipient
        }
      };
    case profile.FollowPolicyType.ANYONE:
      return {
        freeFollowModule: true
      };
    case profile.FollowPolicyType.NO_ONE:
      return {
        revertFollowModule: true
      };
    case profile.FollowPolicyType.UNKNOWN:
      return {
        unknownFollowModule: {
          address: policy.address,
          data: policy.data
        }
      };
  }
}

/**
 * Resolve API {@link ReferenceModule} to more user friendly {@link ReferencePolicy}.
 *
 * @example
 * ```ts
 * const policy = resolveReferencePolicy(publication);
 *
 * switch (policy.type) {
 *   case ReferencePolicyType.ANYONE:
 *     // ...
 *   case ReferencePolicyType.DEGREES_OF_SEPARATION:
 *     // ...
 *   case ReferencePolicyType.FOLLOWERS_ONLY:
 *     // ...
 *   case ReferencePolicyType.NO_ONE:
 *     // ...
 *   case ReferencePolicyType.UNKNOWN:
 *     // ...
 * }
 * ```
 *
 * @param publication - The {@link AnyPublication} to resolve {@link ReferencePolicy} from
 * @returns {@link ReferencePolicy}
 */
function resolveReferencePolicy(publication) {
  var _target$referenceModu;
  var target = publication.__typename === 'Mirror' ? publication.mirrorOn : publication;
  if (target.momoka !== null || target.referenceModule === null) {
    return {
      type: publications.ReferencePolicyType.ANYONE
    };
  }
  switch ((_target$referenceModu = target.referenceModule) === null || _target$referenceModu === void 0 ? void 0 : _target$referenceModu.__typename) {
    case 'DegreesOfSeparationReferenceModuleSettings':
    case 'LegacyDegreesOfSeparationReferenceModuleSettings':
      if (target.referenceModule.degreesOfSeparation === 0) {
        return {
          type: publications.ReferencePolicyType.NO_ONE
        };
      }
      return {
        type: publications.ReferencePolicyType.DEGREES_OF_SEPARATION,
        degreesOfSeparation: target.referenceModule.degreesOfSeparation,
        commentsRestricted: target.referenceModule.commentsRestricted,
        mirrorsRestricted: target.referenceModule.mirrorsRestricted,
        quotesRestricted: target.referenceModule.__typename === 'DegreesOfSeparationReferenceModuleSettings' ? target.referenceModule.quotesRestricted : false,
        sourceProfileId: target.referenceModule.__typename === 'DegreesOfSeparationReferenceModuleSettings' ? target.referenceModule.sourceProfileId : publication.by.id
      };
    case 'FollowOnlyReferenceModuleSettings':
    case 'LegacyFollowOnlyReferenceModuleSettings':
      return {
        type: publications.ReferencePolicyType.FOLLOWERS_ONLY
      };
    case 'UnknownReferenceModuleSettings':
      return {
        type: publications.ReferencePolicyType.UNKNOWN,
        contractAddress: target.referenceModule.contract.address,
        chainId: target.referenceModule.contract.chainId,
        initializeCalldata: target.referenceModule.initializeCalldata,
        initializeResultData: target.referenceModule.initializeResultData,
        signlessApproved: target.referenceModule.signlessApproved,
        sponsoredApproved: target.referenceModule.sponsoredApproved,
        verified: target.referenceModule.verified
      };
  }
}

function _createForOfIteratorHelper(o, allowArrayLike) {
  var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (!it) {
    if (Array.isArray(o) || (it = unsupportedIterableToArray._unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") {
      if (it) o = it;
      var i = 0;
      var F = function () {};
      return {
        s: F,
        n: function () {
          if (i >= o.length) return {
            done: true
          };
          return {
            done: false,
            value: o[i++]
          };
        },
        e: function (e) {
          throw e;
        },
        f: F
      };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var normalCompletion = true,
    didErr = false,
    err;
  return {
    s: function () {
      it = it.call(o);
    },
    n: function () {
      var step = it.next();
      normalCompletion = step.done;
      return step;
    },
    e: function (e) {
      didErr = true;
      err = e;
    },
    f: function () {
      try {
        if (!normalCompletion && it.return != null) it.return();
      } finally {
        if (didErr) throw err;
      }
    }
  };
}

var RequestsQueue = /*#__PURE__*/function () {
  function RequestsQueue() {
    unsupportedIterableToArray._classCallCheck(this, RequestsQueue);
    unsupportedIterableToArray._defineProperty(this, "requests", new Map());
  }
  unsupportedIterableToArray._createClass(RequestsQueue, [{
    key: "enqueue",
    value: function enqueue(request) {
      this.requests.set(request.operation, request);
    }
  }, {
    key: "dequeue",
    value: function dequeue(operation) {
      this.requests["delete"](operation);
    }
  }, {
    key: "retryAll",
    value: function retryAll() {
      var _iterator = _createForOfIteratorHelper(this.requests.values()),
        _step;
      try {
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          var request = _step.value;
          request.forward(request.operation).subscribe(request.observer);
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
    }
  }, {
    key: "failWith",
    value: function failWith(result) {
      var _iterator2 = _createForOfIteratorHelper(this.requests.values()),
        _step2;
      try {
        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
          var _request$observer$nex, _request$observer;
          var request = _step2.value;
          (_request$observer$nex = (_request$observer = request.observer).next) === null || _request$observer$nex === void 0 || _request$observer$nex.call(_request$observer, result);
        }
      } catch (err) {
        _iterator2.e(err);
      } finally {
        _iterator2.f();
      }
    }
  }]);
  return RequestsQueue;
}();
var RefreshTokensLink = /*#__PURE__*/function (_ApolloLink) {
  unsupportedIterableToArray._inherits(RefreshTokensLink, _ApolloLink);
  var _super = unsupportedIterableToArray._createSuper(RefreshTokensLink);
  function RefreshTokensLink(accessTokenStorage) {
    var _this;
    unsupportedIterableToArray._classCallCheck(this, RefreshTokensLink);
    _this = _super.call(this);
    unsupportedIterableToArray._defineProperty(unsupportedIterableToArray._assertThisInitialized(_this), "refreshing", false);
    unsupportedIterableToArray._defineProperty(unsupportedIterableToArray._assertThisInitialized(_this), "queue", new RequestsQueue());
    _this.accessTokenStorage = accessTokenStorage;
    return _this;
  }
  unsupportedIterableToArray._createClass(RefreshTokensLink, [{
    key: "request",
    value: function request(operation, forward) {
      var _this2 = this;
      sharedKernel.invariant(forward, "".concat(RefreshTokensLink.name, " is a non-terminating link and should not be the last in the composed chain"));
      return new utilities.Observable(function (observer) {
        // this if is extremely difficult to test with standard Apollo Client mocks
        if (_this2.refreshing) {
          _this2.queue.enqueue({
            operation: operation,
            forward: forward,
            observer: observer
          });
          return function () {
            _this2.queue.dequeue(operation);
          };
        }
        var subscription = forward(operation).subscribe({
          next: function () {
            var _next = unsupportedIterableToArray._asyncToGenerator( /*#__PURE__*/unsupportedIterableToArray._regeneratorRuntime().mark(function _callee(result) {
              return unsupportedIterableToArray._regeneratorRuntime().wrap(function _callee$(_context) {
                while (1) switch (_context.prev = _context.next) {
                  case 0:
                    if (!_this2.refreshing) {
                      _context.next = 3;
                      break;
                    }
                    _this2.queue.enqueue({
                      operation: operation,
                      forward: forward,
                      observer: observer
                    });
                    return _context.abrupt("return");
                  case 3:
                    observer.next(result);
                  case 4:
                  case "end":
                    return _context.stop();
                }
              }, _callee);
            }));
            function next(_x) {
              return _next.apply(this, arguments);
            }
            return next;
          }(),
          error: function () {
            var _error2 = unsupportedIterableToArray._asyncToGenerator( /*#__PURE__*/unsupportedIterableToArray._regeneratorRuntime().mark(function _callee2(_error) {
              var refresh;
              return unsupportedIterableToArray._regeneratorRuntime().wrap(function _callee2$(_context2) {
                while (1) switch (_context2.prev = _context2.next) {
                  case 0:
                    if (!unsupportedIterableToArray.isUnauthorizedServerError(_error)) {
                      _context2.next = 14;
                      break;
                    }
                    _this2.queue.enqueue({
                      operation: operation,
                      forward: forward,
                      observer: observer
                    });
                    if (!_this2.refreshing) {
                      _context2.next = 4;
                      break;
                    }
                    return _context2.abrupt("return");
                  case 4:
                    _this2.refreshing = true;
                    _context2.next = 7;
                    return _this2.accessTokenStorage.refreshToken();
                  case 7:
                    refresh = _context2.sent;
                    _this2.refreshing = false;
                    if (!refresh.isSuccess()) {
                      _context2.next = 12;
                      break;
                    }
                    _this2.queue.retryAll();
                    return _context2.abrupt("return");
                  case 12:
                    _this2.queue.failWith(_error.result);
                    return _context2.abrupt("return");
                  case 14:
                    observer.error(_error);
                  case 15:
                  case "end":
                    return _context2.stop();
                }
              }, _callee2);
            }));
            function error(_x2) {
              return _error2.apply(this, arguments);
            }
            return error;
          }(),
          complete: function complete() {
            // if refreshing, do not close the observer
            if (_this2.refreshing) {
              return;
            }
            observer.complete();
          }
        });
        return function () {
          subscription.unsubscribe();
        };
      });
    }
  }]);
  return RefreshTokensLink;
}(Apollo.ApolloLink);
function createAuthLink(_ref) {
  var accessTokenStorage = _ref.accessTokenStorage;
  var tokenRefreshLink = new RefreshTokensLink(accessTokenStorage);
  var authHeaderLink = context.setContext(function (_, prevContext) {
    var token = accessTokenStorage.getAccessToken();
    return unsupportedIterableToArray._objectSpread2(unsupportedIterableToArray._objectSpread2({}, prevContext), {}, {
      // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment
      headers: unsupportedIterableToArray._objectSpread2(unsupportedIterableToArray._objectSpread2({}, 'headers' in prevContext && prevContext.headers), token && {
        Authorization: "Bearer ".concat(token)
      })
    });
  });
  return Apollo.from([tokenRefreshLink, authHeaderLink]);
}

function _arrayWithHoles(arr) {
  if (Array.isArray(arr)) return arr;
}

function _iterableToArrayLimit(r, l) {
  var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (null != t) {
    var e,
      n,
      i,
      u,
      a = [],
      f = !0,
      o = !1;
    try {
      if (i = (t = t.call(r)).next, 0 === l) {
        if (Object(t) !== t) return;
        f = !1;
      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0);
    } catch (r) {
      o = !0, n = r;
    } finally {
      try {
        if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return;
      } finally {
        if (o) throw n;
      }
    }
    return a;
  }
}

function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}

function _slicedToArray(arr, i) {
  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || unsupportedIterableToArray._unsupportedIterableToArray(arr, i) || _nonIterableRest();
}

var backupFetch = utilities.maybe(function () {
  return fetch;
});
function wrapFetch(logger, supportedVersion, fetch) {
  return /*#__PURE__*/unsupportedIterableToArray._asyncToGenerator( /*#__PURE__*/unsupportedIterableToArray._regeneratorRuntime().mark(function _callee() {
    var response,
      apiVersion,
      _apiVersion$split,
      _apiVersion$split2,
      apiMajor,
      apiMinor,
      _supportedVersion$spl,
      _supportedVersion$spl2,
      clientMajor,
      clientMinor,
      _args = arguments;
    return unsupportedIterableToArray._regeneratorRuntime().wrap(function _callee$(_context) {
      while (1) switch (_context.prev = _context.next) {
        case 0:
          _context.next = 2;
          return fetch.apply(void 0, _args);
        case 2:
          response = _context.sent;
          if (!(response.status === 200)) {
            _context.next = 17;
            break;
          }
          apiVersion = response.headers.get('x-api-version');
          if (!apiVersion) {
            _context.next = 17;
            break;
          }
          if (!(apiVersion < supportedVersion)) {
            _context.next = 9;
            break;
          }
          logger.warn("The Lens API ".concat(apiVersion, " is outside of the Lens SDK support range ^").concat(supportedVersion));
          return _context.abrupt("return", response);
        case 9:
          _apiVersion$split = apiVersion.split('.'), _apiVersion$split2 = _slicedToArray(_apiVersion$split, 2), apiMajor = _apiVersion$split2[0], apiMinor = _apiVersion$split2[1];
          _supportedVersion$spl = supportedVersion.split('.'), _supportedVersion$spl2 = _slicedToArray(_supportedVersion$spl, 2), clientMajor = _supportedVersion$spl2[0], clientMinor = _supportedVersion$spl2[1];
          if (!(apiMajor && clientMajor && apiMajor > clientMajor)) {
            _context.next = 14;
            break;
          }
          logger.warn("The Lens API ".concat(apiVersion, " is NOT supported by the Lens SDK support range ^").concat(supportedVersion, ". Update your Lens SDK client to the latest version."));
          return _context.abrupt("return", response);
        case 14:
          if (!(apiMinor && clientMinor && apiMinor > clientMinor)) {
            _context.next = 17;
            break;
          }
          logger.info("The Lens API ".concat(apiVersion, " is ahead of the Lens SDK support range ^").concat(supportedVersion, ". Check for a new version of the Lens SDK client, if available."));
          return _context.abrupt("return", response);
        case 17:
          return _context.abrupt("return", response);
        case 18:
        case "end":
          return _context.stop();
      }
    }, _callee);
  }));
}
function createLensLink(_ref2) {
  var _ref3, _ref4;
  var preferredFetch = _ref2.fetch,
    logger = _ref2.logger,
    origin = _ref2.origin,
    supportedVersion = _ref2.supportedVersion,
    uri = _ref2.uri;
  // see https://github.com/apollographql/apollo-client/blob/4bf773f64b78f15419f07676f434fa33e058404e/src/link/http/createHttpLink.ts#L160-L165
  var currentFetch = (_ref3 = (_ref4 = preferredFetch !== null && preferredFetch !== void 0 ? preferredFetch : utilities.maybe(function () {
    return fetch;
  })) !== null && _ref4 !== void 0 ? _ref4 : backupFetch) !== null && _ref3 !== void 0 ? _ref3 : sharedKernel.never();
  return new Apollo.HttpLink({
    uri: uri,
    fetch: wrapFetch(logger, supportedVersion, currentFetch),
    headers: unsupportedIterableToArray._objectSpread2({}, origin && {
      origin: origin
    })
  });
}

var sessionDataVar = Apollo.makeVar(null);
function getSessionData() {
  return sessionDataVar();
}
function useSessionDataVar() {
  return Apollo.useReactiveVar(sessionDataVar);
}
function resetSessionData() {
  sessionDataVar(null);
}
function updateSessionData(session) {
  sessionDataVar(session);
}

function createLensApolloClient(_ref) {
  var accessTokenStorage = _ref.accessTokenStorage,
    uri = _ref.uri,
    logger = _ref.logger,
    pollingInterval = _ref.pollingInterval,
    connectToDevTools = _ref.connectToDevTools;
  var authLink = createAuthLink({
    accessTokenStorage: accessTokenStorage
  });
  var httpLink = createLensLink({
    logger: logger,
    supportedVersion: LENS_API_MINIMAL_SUPPORTED_VERSION,
    uri: uri
  });
  return new unsupportedIterableToArray.SafeApolloClient({
    connectToDevTools: connectToDevTools,
    cache: unsupportedIterableToArray.createLensCache(),
    link: Apollo.from([authLink, httpLink]),
    pollingInterval: pollingInterval,
    version: LENS_API_MINIMAL_SUPPORTED_VERSION
  });
}
function createAuthApolloClient(_ref2) {
  var logger = _ref2.logger,
    origin = _ref2.origin,
    uri = _ref2.uri;
  return new unsupportedIterableToArray.SafeApolloClient({
    cache: unsupportedIterableToArray.createLensCache(),
    link: createLensLink({
      logger: logger,
      origin: origin,
      supportedVersion: LENS_API_MINIMAL_SUPPORTED_VERSION,
      uri: uri
    }),
    version: LENS_API_MINIMAL_SUPPORTED_VERSION
  });
}

exports.ActOnOpenActionDocument = unsupportedIterableToArray.ActOnOpenActionDocument;
exports.AddProfileInterestsDocument = unsupportedIterableToArray.AddProfileInterestsDocument;
exports.AddPublicationBookmarkDocument = unsupportedIterableToArray.AddPublicationBookmarkDocument;
exports.AddPublicationNotInterestedDocument = unsupportedIterableToArray.AddPublicationNotInterestedDocument;
exports.AddReactionDocument = unsupportedIterableToArray.AddReactionDocument;
exports.ApolloServerErrorCode = unsupportedIterableToArray.ApolloServerErrorCode;
exports.AuthAuthenticateDocument = unsupportedIterableToArray.AuthAuthenticateDocument;
exports.AuthChallengeDocument = unsupportedIterableToArray.AuthChallengeDocument;
exports.AuthRefreshDocument = unsupportedIterableToArray.AuthRefreshDocument;
exports.AuthVerifyDocument = unsupportedIterableToArray.AuthVerifyDocument;
exports.BlockDocument = unsupportedIterableToArray.BlockDocument;
exports.BroadcastOnMomokaDocument = unsupportedIterableToArray.BroadcastOnMomokaDocument;
exports.BroadcastOnchainDocument = unsupportedIterableToArray.BroadcastOnchainDocument;
exports.ChangeProfileManagerActionType = unsupportedIterableToArray.ChangeProfileManagerActionType;
exports.ClaimProfileStatusType = unsupportedIterableToArray.ClaimProfileStatusType;
exports.ClaimProfileWithHandleDocument = unsupportedIterableToArray.ClaimProfileWithHandleDocument;
exports.ClaimProfileWithHandleErrorReasonType = unsupportedIterableToArray.ClaimProfileWithHandleErrorReasonType;
exports.ClaimableProfilesDocument = unsupportedIterableToArray.ClaimableProfilesDocument;
exports.ClaimableTokenType = unsupportedIterableToArray.ClaimableTokenType;
exports.CollectOpenActionModuleType = unsupportedIterableToArray.CollectOpenActionModuleType;
exports.CommentOnMomokaDocument = unsupportedIterableToArray.CommentOnMomokaDocument;
exports.CommentOnchainDocument = unsupportedIterableToArray.CommentOnchainDocument;
exports.CommentRankingFilterType = unsupportedIterableToArray.CommentRankingFilterType;
exports.ComparisonOperatorConditionType = unsupportedIterableToArray.ComparisonOperatorConditionType;
exports.CreateActOnOpenActionTypedDataDocument = unsupportedIterableToArray.CreateActOnOpenActionTypedDataDocument;
exports.CreateBlockProfilesTypedDataDocument = unsupportedIterableToArray.CreateBlockProfilesTypedDataDocument;
exports.CreateChangeProfileManagersTypedDataDocument = unsupportedIterableToArray.CreateChangeProfileManagersTypedDataDocument;
exports.CreateFollowTypedDataDocument = unsupportedIterableToArray.CreateFollowTypedDataDocument;
exports.CreateFrameTypedDataDocument = unsupportedIterableToArray.CreateFrameTypedDataDocument;
exports.CreateLegacyCollectTypedDataDocument = unsupportedIterableToArray.CreateLegacyCollectTypedDataDocument;
exports.CreateLinkHandleToProfileTypedDataDocument = unsupportedIterableToArray.CreateLinkHandleToProfileTypedDataDocument;
exports.CreateMomokaCommentTypedDataDocument = unsupportedIterableToArray.CreateMomokaCommentTypedDataDocument;
exports.CreateMomokaMirrorTypedDataDocument = unsupportedIterableToArray.CreateMomokaMirrorTypedDataDocument;
exports.CreateMomokaPostTypedDataDocument = unsupportedIterableToArray.CreateMomokaPostTypedDataDocument;
exports.CreateMomokaQuoteTypedDataDocument = unsupportedIterableToArray.CreateMomokaQuoteTypedDataDocument;
exports.CreateOnchainCommentTypedDataDocument = unsupportedIterableToArray.CreateOnchainCommentTypedDataDocument;
exports.CreateOnchainMirrorTypedDataDocument = unsupportedIterableToArray.CreateOnchainMirrorTypedDataDocument;
exports.CreateOnchainPostTypedDataDocument = unsupportedIterableToArray.CreateOnchainPostTypedDataDocument;
exports.CreateOnchainQuoteTypedDataDocument = unsupportedIterableToArray.CreateOnchainQuoteTypedDataDocument;
exports.CreateOnchainSetProfileMetadataTypedDataDocument = unsupportedIterableToArray.CreateOnchainSetProfileMetadataTypedDataDocument;
exports.CreateProfileWithHandleErrorReasonType = unsupportedIterableToArray.CreateProfileWithHandleErrorReasonType;
exports.CreateSetFollowModuleTypedDataDocument = unsupportedIterableToArray.CreateSetFollowModuleTypedDataDocument;
exports.CreateUnblockProfilesTypedDataDocument = unsupportedIterableToArray.CreateUnblockProfilesTypedDataDocument;
exports.CreateUnfollowTypedDataDocument = unsupportedIterableToArray.CreateUnfollowTypedDataDocument;
exports.CreateUnlinkHandleFromProfileTypedDataDocument = unsupportedIterableToArray.CreateUnlinkHandleFromProfileTypedDataDocument;
exports.CurrenciesDocument = unsupportedIterableToArray.CurrenciesDocument;
exports.CustomFiltersType = unsupportedIterableToArray.CustomFiltersType;
exports.DecryptFailReasonType = unsupportedIterableToArray.DecryptFailReasonType;
exports.DismissRecommendedProfilesDocument = unsupportedIterableToArray.DismissRecommendedProfilesDocument;
exports.ExploreProfilesDocument = unsupportedIterableToArray.ExploreProfilesDocument;
exports.ExploreProfilesOrderByType = unsupportedIterableToArray.ExploreProfilesOrderByType;
exports.ExplorePublicationType = unsupportedIterableToArray.ExplorePublicationType;
exports.ExplorePublicationsDocument = unsupportedIterableToArray.ExplorePublicationsDocument;
exports.ExplorePublicationsOrderByType = unsupportedIterableToArray.ExplorePublicationsOrderByType;
exports.FeedDocument = unsupportedIterableToArray.FeedDocument;
exports.FeedEventItemType = unsupportedIterableToArray.FeedEventItemType;
exports.FeedHighlightsDocument = unsupportedIterableToArray.FeedHighlightsDocument;
exports.FollowDocument = unsupportedIterableToArray.FollowDocument;
exports.FollowModuleType = unsupportedIterableToArray.FollowModuleType;
exports.FollowRevenuesDocument = unsupportedIterableToArray.FollowRevenuesDocument;
exports.FollowersDocument = unsupportedIterableToArray.FollowersDocument;
exports.FollowingDocument = unsupportedIterableToArray.FollowingDocument;
exports.FragmentActedNotification = unsupportedIterableToArray.FragmentActedNotification;
exports.FragmentAmount = unsupportedIterableToArray.FragmentAmount;
exports.FragmentAndCondition = unsupportedIterableToArray.FragmentAndCondition;
exports.FragmentAnyPublicationInternal = unsupportedIterableToArray.FragmentAnyPublicationInternal;
exports.FragmentApp = unsupportedIterableToArray.FragmentApp;
exports.FragmentArticleMetadataV3 = unsupportedIterableToArray.FragmentArticleMetadataV3;
exports.FragmentAudio = unsupportedIterableToArray.FragmentAudio;
exports.FragmentAudioMetadataV3 = unsupportedIterableToArray.FragmentAudioMetadataV3;
exports.FragmentAuthChallengeResult = unsupportedIterableToArray.FragmentAuthChallengeResult;
exports.FragmentCanDecryptResponse = unsupportedIterableToArray.FragmentCanDecryptResponse;
exports.FragmentCheckingInMetadataV3 = unsupportedIterableToArray.FragmentCheckingInMetadataV3;
exports.FragmentClaimProfileWithHandleErrorResult = unsupportedIterableToArray.FragmentClaimProfileWithHandleErrorResult;
exports.FragmentClaimableProfilesResult = unsupportedIterableToArray.FragmentClaimableProfilesResult;
exports.FragmentCollectCondition = unsupportedIterableToArray.FragmentCollectCondition;
exports.FragmentComment = unsupportedIterableToArray.FragmentComment;
exports.FragmentCommentFields = unsupportedIterableToArray.FragmentCommentFields;
exports.FragmentCommentNotification = unsupportedIterableToArray.FragmentCommentNotification;
exports.FragmentCreateActOnOpenActionBroadcastItemResult = unsupportedIterableToArray.FragmentCreateActOnOpenActionBroadcastItemResult;
exports.FragmentCreateActOnOpenActionEip712TypedData = unsupportedIterableToArray.FragmentCreateActOnOpenActionEip712TypedData;
exports.FragmentCreateBlockProfilesBroadcastItemResult = unsupportedIterableToArray.FragmentCreateBlockProfilesBroadcastItemResult;
exports.FragmentCreateChangeProfileManagersBroadcastItemResult = unsupportedIterableToArray.FragmentCreateChangeProfileManagersBroadcastItemResult;
exports.FragmentCreateFollowBroadcastItemResult = unsupportedIterableToArray.FragmentCreateFollowBroadcastItemResult;
exports.FragmentCreateFrameEip712TypedData = unsupportedIterableToArray.FragmentCreateFrameEip712TypedData;
exports.FragmentCreateLegacyCollectBroadcastItemResult = unsupportedIterableToArray.FragmentCreateLegacyCollectBroadcastItemResult;
exports.FragmentCreateLegacyCollectEip712TypedData = unsupportedIterableToArray.FragmentCreateLegacyCollectEip712TypedData;
exports.FragmentCreateLinkHandleToProfileBroadcastItemResult = unsupportedIterableToArray.FragmentCreateLinkHandleToProfileBroadcastItemResult;
exports.FragmentCreateMomokaCommentBroadcastItemResult = unsupportedIterableToArray.FragmentCreateMomokaCommentBroadcastItemResult;
exports.FragmentCreateMomokaMirrorBroadcastItemResult = unsupportedIterableToArray.FragmentCreateMomokaMirrorBroadcastItemResult;
exports.FragmentCreateMomokaPostBroadcastItemResult = unsupportedIterableToArray.FragmentCreateMomokaPostBroadcastItemResult;
exports.FragmentCreateMomokaPublicationResult = unsupportedIterableToArray.FragmentCreateMomokaPublicationResult;
exports.FragmentCreateMomokaQuoteBroadcastItemResult = unsupportedIterableToArray.FragmentCreateMomokaQuoteBroadcastItemResult;
exports.FragmentCreateOnchainCommentBroadcastItemResult = unsupportedIterableToArray.FragmentCreateOnchainCommentBroadcastItemResult;
exports.FragmentCreateOnchainMirrorBroadcastItemResult = unsupportedIterableToArray.FragmentCreateOnchainMirrorBroadcastItemResult;
exports.FragmentCreateOnchainPostBroadcastItemResult = unsupportedIterableToArray.FragmentCreateOnchainPostBroadcastItemResult;
exports.FragmentCreateOnchainQuoteBroadcastItemResult = unsupportedIterableToArray.FragmentCreateOnchainQuoteBroadcastItemResult;
exports.FragmentCreateOnchainSetProfileMetadataBroadcastItemResult = unsupportedIterableToArray.FragmentCreateOnchainSetProfileMetadataBroadcastItemResult;
exports.FragmentCreateProfileWithHandleErrorResult = unsupportedIterableToArray.FragmentCreateProfileWithHandleErrorResult;
exports.FragmentCreateSetFollowModuleBroadcastItemResult = unsupportedIterableToArray.FragmentCreateSetFollowModuleBroadcastItemResult;
exports.FragmentCreateUnblockProfilesBroadcastItemResult = unsupportedIterableToArray.FragmentCreateUnblockProfilesBroadcastItemResult;
exports.FragmentCreateUnfollowBroadcastItemResult = unsupportedIterableToArray.FragmentCreateUnfollowBroadcastItemResult;
exports.FragmentCreateUnlinkHandleFromProfileBroadcastItemResult = unsupportedIterableToArray.FragmentCreateUnlinkHandleFromProfileBroadcastItemResult;
exports.FragmentDegreesOfSeparationReferenceModuleSettings = unsupportedIterableToArray.FragmentDegreesOfSeparationReferenceModuleSettings;
exports.FragmentEip712TypedDataDomain = unsupportedIterableToArray.FragmentEip712TypedDataDomain;
exports.FragmentEip712TypedDataField = unsupportedIterableToArray.FragmentEip712TypedDataField;
exports.FragmentEmbedMetadataV3 = unsupportedIterableToArray.FragmentEmbedMetadataV3;
exports.FragmentEncryptableAudio = unsupportedIterableToArray.FragmentEncryptableAudio;
exports.FragmentEncryptableAudioSet = unsupportedIterableToArray.FragmentEncryptableAudioSet;
exports.FragmentEncryptableImage = unsupportedIterableToArray.FragmentEncryptableImage;
exports.FragmentEncryptableImageSet = unsupportedIterableToArray.FragmentEncryptableImageSet;
exports.FragmentEncryptableVideo = unsupportedIterableToArray.FragmentEncryptableVideo;
exports.FragmentEncryptableVideoSet = unsupportedIterableToArray.FragmentEncryptableVideoSet;
exports.FragmentEoaOwnershipCondition = unsupportedIterableToArray.FragmentEoaOwnershipCondition;
exports.FragmentErc20 = unsupportedIterableToArray.FragmentErc20;
exports.FragmentErc20OwnershipCondition = unsupportedIterableToArray.FragmentErc20OwnershipCondition;
exports.FragmentEventMetadataV3 = unsupportedIterableToArray.FragmentEventMetadataV3;
exports.FragmentExplorePublication = unsupportedIterableToArray.FragmentExplorePublication;
exports.FragmentFeeFollowModuleSettings = unsupportedIterableToArray.FragmentFeeFollowModuleSettings;
exports.FragmentFeedHighlight = unsupportedIterableToArray.FragmentFeedHighlight;
exports.FragmentFeedItem = unsupportedIterableToArray.FragmentFeedItem;
exports.FragmentFiat = unsupportedIterableToArray.FragmentFiat;
exports.FragmentFiatAmount = unsupportedIterableToArray.FragmentFiatAmount;
exports.FragmentFollowCondition = unsupportedIterableToArray.FragmentFollowCondition;
exports.FragmentFollowNotification = unsupportedIterableToArray.FragmentFollowNotification;
exports.FragmentFollowOnlyReferenceModuleSettings = unsupportedIterableToArray.FragmentFollowOnlyReferenceModuleSettings;
exports.FragmentFollowPaidAction = unsupportedIterableToArray.FragmentFollowPaidAction;
exports.FragmentFrameLensManagerSignatureResult = unsupportedIterableToArray.FragmentFrameLensManagerSignatureResult;
exports.FragmentGeoLocation = unsupportedIterableToArray.FragmentGeoLocation;
exports.FragmentHandleInfo = unsupportedIterableToArray.FragmentHandleInfo;
exports.FragmentImage = unsupportedIterableToArray.FragmentImage;
exports.FragmentImageMetadataV3 = unsupportedIterableToArray.FragmentImageMetadataV3;
exports.FragmentImageSet = unsupportedIterableToArray.FragmentImageSet;
exports.FragmentInvitedResult = unsupportedIterableToArray.FragmentInvitedResult;
exports.FragmentKnownCollectOpenActionResult = unsupportedIterableToArray.FragmentKnownCollectOpenActionResult;
exports.FragmentLatestActed = unsupportedIterableToArray.FragmentLatestActed;
exports.FragmentLegacyAaveFeeCollectModuleSettings = unsupportedIterableToArray.FragmentLegacyAaveFeeCollectModuleSettings;
exports.FragmentLegacyDegreesOfSeparationReferenceModuleSettings = unsupportedIterableToArray.FragmentLegacyDegreesOfSeparationReferenceModuleSettings;
exports.FragmentLegacyErc4626FeeCollectModuleSettings = unsupportedIterableToArray.FragmentLegacyErc4626FeeCollectModuleSettings;
exports.FragmentLegacyFeeCollectModuleSettings = unsupportedIterableToArray.FragmentLegacyFeeCollectModuleSettings;
exports.FragmentLegacyFollowOnlyReferenceModuleSettings = unsupportedIterableToArray.FragmentLegacyFollowOnlyReferenceModuleSettings;
exports.FragmentLegacyFreeCollectModuleSettings = unsupportedIterableToArray.FragmentLegacyFreeCollectModuleSettings;
exports.FragmentLegacyLimitedFeeCollectModuleSettings = unsupportedIterableToArray.FragmentLegacyLimitedFeeCollectModuleSettings;
exports.FragmentLegacyLimitedTimedFeeCollectModuleSettings = unsupportedIterableToArray.FragmentLegacyLimitedTimedFeeCollectModuleSettings;
exports.FragmentLegacyMultirecipientFeeCollectModuleSettings = unsupportedIterableToArray.FragmentLegacyMultirecipientFeeCollectModuleSettings;
exports.FragmentLegacyRevertCollectModuleSettings = unsupportedIterableToArray.FragmentLegacyRevertCollectModuleSettings;
exports.FragmentLegacySimpleCollectModuleSettings = unsupportedIterableToArray.FragmentLegacySimpleCollectModuleSettings;
exports.FragmentLegacyTimedFeeCollectModuleSettings = unsupportedIterableToArray.FragmentLegacyTimedFeeCollectModuleSettings;
exports.FragmentLensProfileManagerRelayError = unsupportedIterableToArray.FragmentLensProfileManagerRelayError;
exports.FragmentLensTransactionResult = unsupportedIterableToArray.FragmentLensTransactionResult;
exports.FragmentLinkMetadataV3 = unsupportedIterableToArray.FragmentLinkMetadataV3;
exports.FragmentLiveStreamMetadataV3 = unsupportedIterableToArray.FragmentLiveStreamMetadataV3;
exports.FragmentMarketplaceMetadata = unsupportedIterableToArray.FragmentMarketplaceMetadata;
exports.FragmentMentionNotification = unsupportedIterableToArray.FragmentMentionNotification;
exports.FragmentMintMetadataV3 = unsupportedIterableToArray.FragmentMintMetadataV3;
exports.FragmentMirror = unsupportedIterableToArray.FragmentMirror;
exports.FragmentMirrorNotification = unsupportedIterableToArray.FragmentMirrorNotification;
exports.FragmentModuleMetadata = unsupportedIterableToArray.FragmentModuleMetadata;
exports.FragmentModuleMetadataResult = unsupportedIterableToArray.FragmentModuleMetadataResult;
exports.FragmentMomokaInfo = unsupportedIterableToArray.FragmentMomokaInfo;
exports.FragmentMultirecipientFeeCollectOpenActionSettings = unsupportedIterableToArray.FragmentMultirecipientFeeCollectOpenActionSettings;
exports.FragmentNetworkAddress = unsupportedIterableToArray.FragmentNetworkAddress;
exports.FragmentNftImage = unsupportedIterableToArray.FragmentNftImage;
exports.FragmentNftOwnershipCondition = unsupportedIterableToArray.FragmentNftOwnershipCondition;
exports.FragmentNotification = unsupportedIterableToArray.FragmentNotification;
exports.FragmentOpenActionPaidAction = unsupportedIterableToArray.FragmentOpenActionPaidAction;
exports.FragmentOpenActionProfileActed = unsupportedIterableToArray.FragmentOpenActionProfileActed;
exports.FragmentOpenActionResult = unsupportedIterableToArray.FragmentOpenActionResult;
exports.FragmentOptimisticStatusResult = unsupportedIterableToArray.FragmentOptimisticStatusResult;
exports.FragmentOrCondition = unsupportedIterableToArray.FragmentOrCondition;
exports.FragmentPaginatedResultInfo = unsupportedIterableToArray.FragmentPaginatedResultInfo;
exports.FragmentPost = unsupportedIterableToArray.FragmentPost;
exports.FragmentProfile = unsupportedIterableToArray.FragmentProfile;
exports.FragmentProfileActionHistory = unsupportedIterableToArray.FragmentProfileActionHistory;
exports.FragmentProfileCoverSet = unsupportedIterableToArray.FragmentProfileCoverSet;
exports.FragmentProfileFields = unsupportedIterableToArray.FragmentProfileFields;
exports.FragmentProfileGuardianResult = unsupportedIterableToArray.FragmentProfileGuardianResult;
exports.FragmentProfileManager = unsupportedIterableToArray.FragmentProfileManager;
exports.FragmentProfileMentioned = unsupportedIterableToArray.FragmentProfileMentioned;
exports.FragmentProfileMetadata = unsupportedIterableToArray.FragmentProfileMetadata;
exports.FragmentProfileMirrorResult = unsupportedIterableToArray.FragmentProfileMirrorResult;
exports.FragmentProfileOnchainIdentity = unsupportedIterableToArray.FragmentProfileOnchainIdentity;
exports.FragmentProfileOperations = unsupportedIterableToArray.FragmentProfileOperations;
exports.FragmentProfileOwnershipCondition = unsupportedIterableToArray.FragmentProfileOwnershipCondition;
exports.FragmentProfilePicture = unsupportedIterableToArray.FragmentProfilePicture;
exports.FragmentProfilePictureSet = unsupportedIterableToArray.FragmentProfilePictureSet;
exports.FragmentProfileReactedResult = unsupportedIterableToArray.FragmentProfileReactedResult;
exports.FragmentProfileReactionResult = unsupportedIterableToArray.FragmentProfileReactionResult;
exports.FragmentProfileStats = unsupportedIterableToArray.FragmentProfileStats;
exports.FragmentProfileWhoReactedResult = unsupportedIterableToArray.FragmentProfileWhoReactedResult;
exports.FragmentPublicationMarketplaceMetadataAttribute = unsupportedIterableToArray.FragmentPublicationMarketplaceMetadataAttribute;
exports.FragmentPublicationMetadataLitEncryption = unsupportedIterableToArray.FragmentPublicationMetadataLitEncryption;
exports.FragmentPublicationMetadataMediaAudio = unsupportedIterableToArray.FragmentPublicationMetadataMediaAudio;
exports.FragmentPublicationMetadataMediaImage = unsupportedIterableToArray.FragmentPublicationMetadataMediaImage;
exports.FragmentPublicationMetadataMediaVideo = unsupportedIterableToArray.FragmentPublicationMetadataMediaVideo;
exports.FragmentPublicationOperations = unsupportedIterableToArray.FragmentPublicationOperations;
exports.FragmentPublicationRevenue = unsupportedIterableToArray.FragmentPublicationRevenue;
exports.FragmentPublicationStats = unsupportedIterableToArray.FragmentPublicationStats;
exports.FragmentPublicationValidateMetadataResult = unsupportedIterableToArray.FragmentPublicationValidateMetadataResult;
exports.FragmentQuote = unsupportedIterableToArray.FragmentQuote;
exports.FragmentQuoteFields = unsupportedIterableToArray.FragmentQuoteFields;
exports.FragmentQuoteNotification = unsupportedIterableToArray.FragmentQuoteNotification;
exports.FragmentReactedResult = unsupportedIterableToArray.FragmentReactedResult;
exports.FragmentReactionEvent = unsupportedIterableToArray.FragmentReactionEvent;
exports.FragmentReactionNotification = unsupportedIterableToArray.FragmentReactionNotification;
exports.FragmentRecipient = unsupportedIterableToArray.FragmentRecipient;
exports.FragmentRelayError = unsupportedIterableToArray.FragmentRelayError;
exports.FragmentRelayQueueResult = unsupportedIterableToArray.FragmentRelayQueueResult;
exports.FragmentRelaySuccess = unsupportedIterableToArray.FragmentRelaySuccess;
exports.FragmentReservedClaimable = unsupportedIterableToArray.FragmentReservedClaimable;
exports.FragmentRevenueAggregate = unsupportedIterableToArray.FragmentRevenueAggregate;
exports.FragmentRevertFollowModuleSettings = unsupportedIterableToArray.FragmentRevertFollowModuleSettings;
exports.FragmentRootCondition = unsupportedIterableToArray.FragmentRootCondition;
exports.FragmentSimpleCollectOpenActionSettings = unsupportedIterableToArray.FragmentSimpleCollectOpenActionSettings;
exports.FragmentSpaceMetadataV3 = unsupportedIterableToArray.FragmentSpaceMetadataV3;
exports.FragmentStoryMetadataV3 = unsupportedIterableToArray.FragmentStoryMetadataV3;
exports.FragmentTagResult = unsupportedIterableToArray.FragmentTagResult;
exports.FragmentTextOnlyMetadataV3 = unsupportedIterableToArray.FragmentTextOnlyMetadataV3;
exports.FragmentThreeDMetadataV3 = unsupportedIterableToArray.FragmentThreeDMetadataV3;
exports.FragmentThreeDMetadataV3Asset = unsupportedIterableToArray.FragmentThreeDMetadataV3Asset;
exports.FragmentTransactionMetadataV3 = unsupportedIterableToArray.FragmentTransactionMetadataV3;
exports.FragmentUnknownFollowModuleSettings = unsupportedIterableToArray.FragmentUnknownFollowModuleSettings;
exports.FragmentUnknownOpenActionModuleSettings = unsupportedIterableToArray.FragmentUnknownOpenActionModuleSettings;
exports.FragmentUnknownOpenActionResult = unsupportedIterableToArray.FragmentUnknownOpenActionResult;
exports.FragmentUnknownReferenceModuleSettings = unsupportedIterableToArray.FragmentUnknownReferenceModuleSettings;
exports.FragmentUserCurrentRateLimit = unsupportedIterableToArray.FragmentUserCurrentRateLimit;
exports.FragmentUserCurrentRateLimitResult = unsupportedIterableToArray.FragmentUserCurrentRateLimitResult;
exports.FragmentUserSigNonces = unsupportedIterableToArray.FragmentUserSigNonces;
exports.FragmentVideo = unsupportedIterableToArray.FragmentVideo;
exports.FragmentVideoMetadataV3 = unsupportedIterableToArray.FragmentVideoMetadataV3;
exports.FrameVerifySignatureResult = unsupportedIterableToArray.FrameVerifySignatureResult;
exports.GenerateLensApiRelayAddressDocument = unsupportedIterableToArray.GenerateLensApiRelayAddressDocument;
exports.HandleToAddressDocument = unsupportedIterableToArray.HandleToAddressDocument;
exports.HiddenCommentsType = unsupportedIterableToArray.HiddenCommentsType;
exports.HideCommentDocument = unsupportedIterableToArray.HideCommentDocument;
exports.HidePublicationDocument = unsupportedIterableToArray.HidePublicationDocument;
exports.IdKitPhoneVerifyWebhookResultStatusType = unsupportedIterableToArray.IdKitPhoneVerifyWebhookResultStatusType;
exports.InviteDocument = unsupportedIterableToArray.InviteDocument;
exports.InvitedProfilesDocument = unsupportedIterableToArray.InvitedProfilesDocument;
exports.LastLoggedInProfileDocument = unsupportedIterableToArray.LastLoggedInProfileDocument;
exports.LatestPaidActionsDocument = unsupportedIterableToArray.LatestPaidActionsDocument;
exports.LegacyCollectDocument = unsupportedIterableToArray.LegacyCollectDocument;
exports.LensProfileManagerRelayErrorReasonType = unsupportedIterableToArray.LensProfileManagerRelayErrorReasonType;
exports.LensTransactionFailureType = unsupportedIterableToArray.LensTransactionFailureType;
exports.LensTransactionStatusDocument = unsupportedIterableToArray.LensTransactionStatusDocument;
exports.LensTransactionStatusType = unsupportedIterableToArray.LensTransactionStatusType;
exports.LimitType = unsupportedIterableToArray.LimitType;
exports.LinkHandleToProfileDocument = unsupportedIterableToArray.LinkHandleToProfileDocument;
exports.ManagedProfileVisibility = unsupportedIterableToArray.ManagedProfileVisibility;
exports.MarketplaceMetadataAttributeDisplayType = unsupportedIterableToArray.MarketplaceMetadataAttributeDisplayType;
exports.MetadataAttributeType = unsupportedIterableToArray.MetadataAttributeType;
exports.MirrorOnMomokaDocument = unsupportedIterableToArray.MirrorOnMomokaDocument;
exports.MirrorOnchainDocument = unsupportedIterableToArray.MirrorOnchainDocument;
exports.ModExplorePublicationType = unsupportedIterableToArray.ModExplorePublicationType;
exports.ModuleMetadataDocument = unsupportedIterableToArray.ModuleMetadataDocument;
exports.ModuleType = unsupportedIterableToArray.ModuleType;
exports.MomokaValidatorError = unsupportedIterableToArray.MomokaValidatorError;
exports.MutualFollowersDocument = unsupportedIterableToArray.MutualFollowersDocument;
exports.NftCollectionOwnersOrder = unsupportedIterableToArray.NftCollectionOwnersOrder;
exports.NftContractType = unsupportedIterableToArray.NftContractType;
exports.NotificationType = unsupportedIterableToArray.NotificationType;
exports.NotificationsDocument = unsupportedIterableToArray.NotificationsDocument;
exports.OpenActionCategoryType = unsupportedIterableToArray.OpenActionCategoryType;
exports.OpenActionModuleType = unsupportedIterableToArray.OpenActionModuleType;
exports.OwnedHandlesDocument = unsupportedIterableToArray.OwnedHandlesDocument;
exports.PeerToPeerRecommendDocument = unsupportedIterableToArray.PeerToPeerRecommendDocument;
exports.PeerToPeerUnrecommendDocument = unsupportedIterableToArray.PeerToPeerUnrecommendDocument;
exports.PoapTokenLayerType = unsupportedIterableToArray.PoapTokenLayerType;
exports.PopularNftCollectionsOrder = unsupportedIterableToArray.PopularNftCollectionsOrder;
exports.PostOnMomokaDocument = unsupportedIterableToArray.PostOnMomokaDocument;
exports.PostOnchainDocument = unsupportedIterableToArray.PostOnchainDocument;
exports.ProfileActionHistoryDocument = unsupportedIterableToArray.ProfileActionHistoryDocument;
exports.ProfileActionHistoryType = unsupportedIterableToArray.ProfileActionHistoryType;
exports.ProfileAlreadyInvitedDocument = unsupportedIterableToArray.ProfileAlreadyInvitedDocument;
exports.ProfileDocument = unsupportedIterableToArray.ProfileDocument;
exports.ProfileInterestTypes = unsupportedIterableToArray.ProfileInterestTypes;
exports.ProfileManagersDocument = unsupportedIterableToArray.ProfileManagersDocument;
exports.ProfileRecommendationsDocument = unsupportedIterableToArray.ProfileRecommendationsDocument;
exports.ProfileReportingFraudSubreason = unsupportedIterableToArray.ProfileReportingFraudSubreason;
exports.ProfileReportingReason = unsupportedIterableToArray.ProfileReportingReason;
exports.ProfileReportingSpamSubreason = unsupportedIterableToArray.ProfileReportingSpamSubreason;
exports.ProfilesDocument = unsupportedIterableToArray.ProfilesDocument;
exports.ProfilesManagedDocument = unsupportedIterableToArray.ProfilesManagedDocument;
exports.ProfilesOrderBy = unsupportedIterableToArray.ProfilesOrderBy;
exports.PublicationBookmarksDocument = unsupportedIterableToArray.PublicationBookmarksDocument;
exports.PublicationContentWarningType = unsupportedIterableToArray.PublicationContentWarningType;
exports.PublicationDocument = unsupportedIterableToArray.PublicationDocument;
exports.PublicationMetadataLicenseType = unsupportedIterableToArray.PublicationMetadataLicenseType;
exports.PublicationMetadataMainFocusType = unsupportedIterableToArray.PublicationMetadataMainFocusType;
exports.PublicationMetadataTransactionType = unsupportedIterableToArray.PublicationMetadataTransactionType;
exports.PublicationReactionType = unsupportedIterableToArray.PublicationReactionType;
exports.PublicationReportingFraudSubreason = unsupportedIterableToArray.PublicationReportingFraudSubreason;
exports.PublicationReportingIllegalSubreason = unsupportedIterableToArray.PublicationReportingIllegalSubreason;
exports.PublicationReportingReason = unsupportedIterableToArray.PublicationReportingReason;
exports.PublicationReportingSensitiveSubreason = unsupportedIterableToArray.PublicationReportingSensitiveSubreason;
exports.PublicationReportingSpamSubreason = unsupportedIterableToArray.PublicationReportingSpamSubreason;
exports.PublicationType = unsupportedIterableToArray.PublicationType;
exports.PublicationsDocument = unsupportedIterableToArray.PublicationsDocument;
exports.PublicationsTagsDocument = unsupportedIterableToArray.PublicationsTagsDocument;
exports.QuoteOnMomokaDocument = unsupportedIterableToArray.QuoteOnMomokaDocument;
exports.QuoteOnchainDocument = unsupportedIterableToArray.QuoteOnchainDocument;
exports.ReferenceModuleType = unsupportedIterableToArray.ReferenceModuleType;
exports.RefreshPublicationMetadataDocument = unsupportedIterableToArray.RefreshPublicationMetadataDocument;
exports.RefreshPublicationMetadataResultType = unsupportedIterableToArray.RefreshPublicationMetadataResultType;
exports.RelayErrorReasonType = unsupportedIterableToArray.RelayErrorReasonType;
exports.RelayQueuesDocument = unsupportedIterableToArray.RelayQueuesDocument;
exports.RelayRoleKey = unsupportedIterableToArray.RelayRoleKey;
exports.RemoveProfileInterestsDocument = unsupportedIterableToArray.RemoveProfileInterestsDocument;
exports.RemovePublicationBookmarkDocument = unsupportedIterableToArray.RemovePublicationBookmarkDocument;
exports.RemoveReactionDocument = unsupportedIterableToArray.RemoveReactionDocument;
exports.ReportProfileDocument = unsupportedIterableToArray.ReportProfileDocument;
exports.ReportPublicationDocument = unsupportedIterableToArray.ReportPublicationDocument;
exports.RevenueFromPublicationDocument = unsupportedIterableToArray.RevenueFromPublicationDocument;
exports.RevenueFromPublicationsDocument = unsupportedIterableToArray.RevenueFromPublicationsDocument;
exports.RevokeAuthenticationDocument = unsupportedIterableToArray.RevokeAuthenticationDocument;
exports.SearchProfilesDocument = unsupportedIterableToArray.SearchProfilesDocument;
exports.SearchPublicationType = unsupportedIterableToArray.SearchPublicationType;
exports.SearchPublicationsDocument = unsupportedIterableToArray.SearchPublicationsDocument;
exports.SetFollowModuleDocument = unsupportedIterableToArray.SetFollowModuleDocument;
exports.SetProfileMetadataDocument = unsupportedIterableToArray.SetProfileMetadataDocument;
exports.SignFrameActionDocument = unsupportedIterableToArray.SignFrameActionDocument;
exports.SupportedFiatType = unsupportedIterableToArray.SupportedFiatType;
exports.TagSortCriteriaType = unsupportedIterableToArray.TagSortCriteriaType;
exports.TriStateValue = unsupportedIterableToArray.TriStateValue;
exports.TxIdToTxHashDocument = unsupportedIterableToArray.TxIdToTxHashDocument;
exports.TxStatus = unsupportedIterableToArray.TxStatus;
exports.UnblockDocument = unsupportedIterableToArray.UnblockDocument;
exports.UndoPublicationNotInterestedDocument = unsupportedIterableToArray.UndoPublicationNotInterestedDocument;
exports.UnfollowDocument = unsupportedIterableToArray.UnfollowDocument;
exports.UnhideCommentDocument = unsupportedIterableToArray.UnhideCommentDocument;
exports.UnlinkHandleFromProfileDocument = unsupportedIterableToArray.UnlinkHandleFromProfileDocument;
exports.UnspecifiedError = unsupportedIterableToArray.UnspecifiedError;
exports.UserRateLimitDocument = unsupportedIterableToArray.UserRateLimitDocument;
exports.UserSigNoncesDocument = unsupportedIterableToArray.UserSigNoncesDocument;
exports.ValidatePublicationMetadataDocument = unsupportedIterableToArray.ValidatePublicationMetadataDocument;
exports.ValidationError = unsupportedIterableToArray.ValidationError;
exports.WalletAuthenticationToProfileAuthenticationDocument = unsupportedIterableToArray.WalletAuthenticationToProfileAuthenticationDocument;
exports.WhoActedOnPublicationDocument = unsupportedIterableToArray.WhoActedOnPublicationDocument;
exports.WhoHaveBlockedDocument = unsupportedIterableToArray.WhoHaveBlockedDocument;
exports.WhoReactedPublicationDocument = unsupportedIterableToArray.WhoReactedPublicationDocument;
exports.WorldcoinPhoneVerifyType = unsupportedIterableToArray.WorldcoinPhoneVerifyType;
exports.countAnyPendingCollect = unsupportedIterableToArray.countAnyPendingCollect;
exports.countAnyPendingCollectFor = unsupportedIterableToArray.countAnyPendingCollectFor;
exports.countAnyPendingCreateCommentFor = unsupportedIterableToArray.countAnyPendingCreateCommentFor;
exports.countAnyPendingCreateMirrorFor = unsupportedIterableToArray.countAnyPendingCreateMirrorFor;
exports.countAnyPendingCreateQuoteFor = unsupportedIterableToArray.countAnyPendingCreateQuoteFor;
exports.countPendingFollowFor = unsupportedIterableToArray.countPendingFollowFor;
exports.countPendingUnfollowFor = unsupportedIterableToArray.countPendingUnfollowFor;
exports.getPendingLinkHandleTxFor = unsupportedIterableToArray.getPendingLinkHandleTxFor;
exports.getPendingUnlinkHandleTxFor = unsupportedIterableToArray.getPendingUnlinkHandleTxFor;
exports.graphQLResultHasUnauthenticatedError = unsupportedIterableToArray.graphQLResultHasUnauthenticatedError;
exports.hasPendingBlockForProfile = unsupportedIterableToArray.hasPendingBlockForProfile;
exports.hasPendingUnblockForProfile = unsupportedIterableToArray.hasPendingUnblockForProfile;
exports.isCursor = unsupportedIterableToArray.isCursor;
exports.isServerError = unsupportedIterableToArray.isServerError;
exports.isUnauthorizedServerError = unsupportedIterableToArray.isUnauthorizedServerError;
exports.isValidationApolloError = unsupportedIterableToArray.isValidationApolloError;
exports.recentTransactionsVar = unsupportedIterableToArray.recentTransactionsVar;
exports.useActOnOpenAction = unsupportedIterableToArray.useActOnOpenAction;
exports.useAddProfileInterests = unsupportedIterableToArray.useAddProfileInterests;
exports.useAddPublicationBookmark = unsupportedIterableToArray.useAddPublicationBookmark;
exports.useAddPublicationNotInterested = unsupportedIterableToArray.useAddPublicationNotInterested;
exports.useAddReaction = unsupportedIterableToArray.useAddReaction;
exports.useAuthAuthenticate = unsupportedIterableToArray.useAuthAuthenticate;
exports.useAuthChallenge = unsupportedIterableToArray.useAuthChallenge;
exports.useAuthChallengeLazyQuery = unsupportedIterableToArray.useAuthChallengeLazyQuery;
exports.useAuthRefresh = unsupportedIterableToArray.useAuthRefresh;
exports.useAuthVerify = unsupportedIterableToArray.useAuthVerify;
exports.useAuthVerifyLazyQuery = unsupportedIterableToArray.useAuthVerifyLazyQuery;
exports.useBlock = unsupportedIterableToArray.useBlock;
exports.useBroadcastOnMomoka = unsupportedIterableToArray.useBroadcastOnMomoka;
exports.useBroadcastOnchain = unsupportedIterableToArray.useBroadcastOnchain;
exports.useClaimProfileWithHandle = unsupportedIterableToArray.useClaimProfileWithHandle;
exports.useClaimableProfiles = unsupportedIterableToArray.useClaimableProfiles;
exports.useClaimableProfilesLazyQuery = unsupportedIterableToArray.useClaimableProfilesLazyQuery;
exports.useCommentOnMomoka = unsupportedIterableToArray.useCommentOnMomoka;
exports.useCommentOnchain = unsupportedIterableToArray.useCommentOnchain;
exports.useCreateActOnOpenActionTypedData = unsupportedIterableToArray.useCreateActOnOpenActionTypedData;
exports.useCreateBlockProfilesTypedData = unsupportedIterableToArray.useCreateBlockProfilesTypedData;
exports.useCreateChangeProfileManagersTypedData = unsupportedIterableToArray.useCreateChangeProfileManagersTypedData;
exports.useCreateFollowTypedData = unsupportedIterableToArray.useCreateFollowTypedData;
exports.useCreateFrameTypedData = unsupportedIterableToArray.useCreateFrameTypedData;
exports.useCreateFrameTypedDataLazyQuery = unsupportedIterableToArray.useCreateFrameTypedDataLazyQuery;
exports.useCreateLegacyCollectTypedData = unsupportedIterableToArray.useCreateLegacyCollectTypedData;
exports.useCreateLinkHandleToProfileTypedData = unsupportedIterableToArray.useCreateLinkHandleToProfileTypedData;
exports.useCreateMomokaCommentTypedData = unsupportedIterableToArray.useCreateMomokaCommentTypedData;
exports.useCreateMomokaMirrorTypedData = unsupportedIterableToArray.useCreateMomokaMirrorTypedData;
exports.useCreateMomokaPostTypedData = unsupportedIterableToArray.useCreateMomokaPostTypedData;
exports.useCreateMomokaQuoteTypedData = unsupportedIterableToArray.useCreateMomokaQuoteTypedData;
exports.useCreateOnchainCommentTypedData = unsupportedIterableToArray.useCreateOnchainCommentTypedData;
exports.useCreateOnchainMirrorTypedData = unsupportedIterableToArray.useCreateOnchainMirrorTypedData;
exports.useCreateOnchainPostTypedData = unsupportedIterableToArray.useCreateOnchainPostTypedData;
exports.useCreateOnchainQuoteTypedData = unsupportedIterableToArray.useCreateOnchainQuoteTypedData;
exports.useCreateOnchainSetProfileMetadataTypedData = unsupportedIterableToArray.useCreateOnchainSetProfileMetadataTypedData;
exports.useCreateSetFollowModuleTypedData = unsupportedIterableToArray.useCreateSetFollowModuleTypedData;
exports.useCreateUnblockProfilesTypedData = unsupportedIterableToArray.useCreateUnblockProfilesTypedData;
exports.useCreateUnfollowTypedData = unsupportedIterableToArray.useCreateUnfollowTypedData;
exports.useCreateUnlinkHandleFromProfileTypedData = unsupportedIterableToArray.useCreateUnlinkHandleFromProfileTypedData;
exports.useCurrencies = unsupportedIterableToArray.useCurrencies;
exports.useCurrenciesLazyQuery = unsupportedIterableToArray.useCurrenciesLazyQuery;
exports.useDismissRecommendedProfiles = unsupportedIterableToArray.useDismissRecommendedProfiles;
exports.useExploreProfiles = unsupportedIterableToArray.useExploreProfiles;
exports.useExploreProfilesLazyQuery = unsupportedIterableToArray.useExploreProfilesLazyQuery;
exports.useExplorePublications = unsupportedIterableToArray.useExplorePublications;
exports.useExplorePublicationsLazyQuery = unsupportedIterableToArray.useExplorePublicationsLazyQuery;
exports.useFeed = unsupportedIterableToArray.useFeed;
exports.useFeedHighlights = unsupportedIterableToArray.useFeedHighlights;
exports.useFeedHighlightsLazyQuery = unsupportedIterableToArray.useFeedHighlightsLazyQuery;
exports.useFeedLazyQuery = unsupportedIterableToArray.useFeedLazyQuery;
exports.useFollow = unsupportedIterableToArray.useFollow;
exports.useFollowRevenues = unsupportedIterableToArray.useFollowRevenues;
exports.useFollowRevenuesLazyQuery = unsupportedIterableToArray.useFollowRevenuesLazyQuery;
exports.useFollowers = unsupportedIterableToArray.useFollowers;
exports.useFollowersLazyQuery = unsupportedIterableToArray.useFollowersLazyQuery;
exports.useFollowing = unsupportedIterableToArray.useFollowing;
exports.useFollowingLazyQuery = unsupportedIterableToArray.useFollowingLazyQuery;
exports.useGenerateLensApiRelayAddress = unsupportedIterableToArray.useGenerateLensApiRelayAddress;
exports.useGenerateLensApiRelayAddressLazyQuery = unsupportedIterableToArray.useGenerateLensApiRelayAddressLazyQuery;
exports.useHandleToAddress = unsupportedIterableToArray.useHandleToAddress;
exports.useHandleToAddressLazyQuery = unsupportedIterableToArray.useHandleToAddressLazyQuery;
exports.useHideComment = unsupportedIterableToArray.useHideComment;
exports.useHidePublication = unsupportedIterableToArray.useHidePublication;
exports.useInvite = unsupportedIterableToArray.useInvite;
exports.useInvitedProfiles = unsupportedIterableToArray.useInvitedProfiles;
exports.useInvitedProfilesLazyQuery = unsupportedIterableToArray.useInvitedProfilesLazyQuery;
exports.useLastLoggedInProfile = unsupportedIterableToArray.useLastLoggedInProfile;
exports.useLastLoggedInProfileLazyQuery = unsupportedIterableToArray.useLastLoggedInProfileLazyQuery;
exports.useLatestPaidActions = unsupportedIterableToArray.useLatestPaidActions;
exports.useLatestPaidActionsLazyQuery = unsupportedIterableToArray.useLatestPaidActionsLazyQuery;
exports.useLegacyCollect = unsupportedIterableToArray.useLegacyCollect;
exports.useLensTransactionStatus = unsupportedIterableToArray.useLensTransactionStatus;
exports.useLensTransactionStatusLazyQuery = unsupportedIterableToArray.useLensTransactionStatusLazyQuery;
exports.useLinkHandleToProfile = unsupportedIterableToArray.useLinkHandleToProfile;
exports.useMirrorOnMomoka = unsupportedIterableToArray.useMirrorOnMomoka;
exports.useMirrorOnchain = unsupportedIterableToArray.useMirrorOnchain;
exports.useModuleMetadata = unsupportedIterableToArray.useModuleMetadata;
exports.useModuleMetadataLazyQuery = unsupportedIterableToArray.useModuleMetadataLazyQuery;
exports.useMutualFollowers = unsupportedIterableToArray.useMutualFollowers;
exports.useMutualFollowersLazyQuery = unsupportedIterableToArray.useMutualFollowersLazyQuery;
exports.useNotifications = unsupportedIterableToArray.useNotifications;
exports.useNotificationsLazyQuery = unsupportedIterableToArray.useNotificationsLazyQuery;
exports.useOwnedHandles = unsupportedIterableToArray.useOwnedHandles;
exports.useOwnedHandlesLazyQuery = unsupportedIterableToArray.useOwnedHandlesLazyQuery;
exports.usePeerToPeerRecommend = unsupportedIterableToArray.usePeerToPeerRecommend;
exports.usePeerToPeerUnrecommend = unsupportedIterableToArray.usePeerToPeerUnrecommend;
exports.usePostOnMomoka = unsupportedIterableToArray.usePostOnMomoka;
exports.usePostOnchain = unsupportedIterableToArray.usePostOnchain;
exports.useProfile = unsupportedIterableToArray.useProfile;
exports.useProfileActionHistory = unsupportedIterableToArray.useProfileActionHistory;
exports.useProfileActionHistoryLazyQuery = unsupportedIterableToArray.useProfileActionHistoryLazyQuery;
exports.useProfileAlreadyInvited = unsupportedIterableToArray.useProfileAlreadyInvited;
exports.useProfileAlreadyInvitedLazyQuery = unsupportedIterableToArray.useProfileAlreadyInvitedLazyQuery;
exports.useProfileLazyQuery = unsupportedIterableToArray.useProfileLazyQuery;
exports.useProfileManagers = unsupportedIterableToArray.useProfileManagers;
exports.useProfileManagersLazyQuery = unsupportedIterableToArray.useProfileManagersLazyQuery;
exports.useProfileRecommendations = unsupportedIterableToArray.useProfileRecommendations;
exports.useProfileRecommendationsLazyQuery = unsupportedIterableToArray.useProfileRecommendationsLazyQuery;
exports.useProfiles = unsupportedIterableToArray.useProfiles;
exports.useProfilesLazyQuery = unsupportedIterableToArray.useProfilesLazyQuery;
exports.useProfilesManaged = unsupportedIterableToArray.useProfilesManaged;
exports.useProfilesManagedLazyQuery = unsupportedIterableToArray.useProfilesManagedLazyQuery;
exports.usePublication = unsupportedIterableToArray.usePublication;
exports.usePublicationBookmarks = unsupportedIterableToArray.usePublicationBookmarks;
exports.usePublicationBookmarksLazyQuery = unsupportedIterableToArray.usePublicationBookmarksLazyQuery;
exports.usePublicationLazyQuery = unsupportedIterableToArray.usePublicationLazyQuery;
exports.usePublications = unsupportedIterableToArray.usePublications;
exports.usePublicationsLazyQuery = unsupportedIterableToArray.usePublicationsLazyQuery;
exports.usePublicationsTags = unsupportedIterableToArray.usePublicationsTags;
exports.usePublicationsTagsLazyQuery = unsupportedIterableToArray.usePublicationsTagsLazyQuery;
exports.useQuoteOnMomoka = unsupportedIterableToArray.useQuoteOnMomoka;
exports.useQuoteOnchain = unsupportedIterableToArray.useQuoteOnchain;
exports.useRecentTransactionsVar = unsupportedIterableToArray.useRecentTransactionsVar;
exports.useRefreshPublicationMetadata = unsupportedIterableToArray.useRefreshPublicationMetadata;
exports.useRelayQueues = unsupportedIterableToArray.useRelayQueues;
exports.useRelayQueuesLazyQuery = unsupportedIterableToArray.useRelayQueuesLazyQuery;
exports.useRemoveProfileInterests = unsupportedIterableToArray.useRemoveProfileInterests;
exports.useRemovePublicationBookmark = unsupportedIterableToArray.useRemovePublicationBookmark;
exports.useRemoveReaction = unsupportedIterableToArray.useRemoveReaction;
exports.useReportProfile = unsupportedIterableToArray.useReportProfile;
exports.useReportPublication = unsupportedIterableToArray.useReportPublication;
exports.useRevenueFromPublication = unsupportedIterableToArray.useRevenueFromPublication;
exports.useRevenueFromPublicationLazyQuery = unsupportedIterableToArray.useRevenueFromPublicationLazyQuery;
exports.useRevenueFromPublications = unsupportedIterableToArray.useRevenueFromPublications;
exports.useRevenueFromPublicationsLazyQuery = unsupportedIterableToArray.useRevenueFromPublicationsLazyQuery;
exports.useRevokeAuthentication = unsupportedIterableToArray.useRevokeAuthentication;
exports.useSearchProfiles = unsupportedIterableToArray.useSearchProfiles;
exports.useSearchProfilesLazyQuery = unsupportedIterableToArray.useSearchProfilesLazyQuery;
exports.useSearchPublications = unsupportedIterableToArray.useSearchPublications;
exports.useSearchPublicationsLazyQuery = unsupportedIterableToArray.useSearchPublicationsLazyQuery;
exports.useSetFollowModule = unsupportedIterableToArray.useSetFollowModule;
exports.useSetProfileMetadata = unsupportedIterableToArray.useSetProfileMetadata;
exports.useSignFrameAction = unsupportedIterableToArray.useSignFrameAction;
exports.useTxIdToTxHash = unsupportedIterableToArray.useTxIdToTxHash;
exports.useTxIdToTxHashLazyQuery = unsupportedIterableToArray.useTxIdToTxHashLazyQuery;
exports.useUnblock = unsupportedIterableToArray.useUnblock;
exports.useUndoPublicationNotInterested = unsupportedIterableToArray.useUndoPublicationNotInterested;
exports.useUnfollow = unsupportedIterableToArray.useUnfollow;
exports.useUnhideComment = unsupportedIterableToArray.useUnhideComment;
exports.useUnlinkHandleFromProfile = unsupportedIterableToArray.useUnlinkHandleFromProfile;
exports.useUserRateLimit = unsupportedIterableToArray.useUserRateLimit;
exports.useUserRateLimitLazyQuery = unsupportedIterableToArray.useUserRateLimitLazyQuery;
exports.useUserSigNonces = unsupportedIterableToArray.useUserSigNonces;
exports.useUserSigNoncesLazyQuery = unsupportedIterableToArray.useUserSigNoncesLazyQuery;
exports.useValidatePublicationMetadata = unsupportedIterableToArray.useValidatePublicationMetadata;
exports.useValidatePublicationMetadataLazyQuery = unsupportedIterableToArray.useValidatePublicationMetadataLazyQuery;
exports.useWalletAuthenticationToProfileAuthentication = unsupportedIterableToArray.useWalletAuthenticationToProfileAuthentication;
exports.useWhoActedOnPublication = unsupportedIterableToArray.useWhoActedOnPublication;
exports.useWhoActedOnPublicationLazyQuery = unsupportedIterableToArray.useWhoActedOnPublicationLazyQuery;
exports.useWhoHaveBlocked = unsupportedIterableToArray.useWhoHaveBlocked;
exports.useWhoHaveBlockedLazyQuery = unsupportedIterableToArray.useWhoHaveBlockedLazyQuery;
exports.useWhoReactedPublication = unsupportedIterableToArray.useWhoReactedPublication;
exports.useWhoReactedPublicationLazyQuery = unsupportedIterableToArray.useWhoReactedPublicationLazyQuery;
exports.chainType = chainType;
exports.createAuthApolloClient = createAuthApolloClient;
exports.createLensApolloClient = createLensApolloClient;
exports.erc20Amount = erc20Amount;
exports.fiatAmount = fiatAmount;
exports.findCollectModuleSettings = findCollectModuleSettings;
exports.getSessionData = getSessionData;
exports.isCollectModuleSettings = isCollectModuleSettings;
exports.isCommentPublication = isCommentPublication;
exports.isMirrorPublication = isMirrorPublication;
exports.isMultirecipientCollectFee = isMultirecipientCollectFee;
exports.isPostPublication = isPostPublication;
exports.isPrimaryPublication = isPrimaryPublication;
exports.isPublicationId = isPublicationId;
exports.isQuotePublication = isQuotePublication;
exports.omitTypename = omitTypename;
exports.resetSessionData = resetSessionData;
exports.resolveCollectPolicy = resolveCollectPolicy;
exports.resolveFollowModuleInput = resolveFollowModuleInput;
exports.resolveFollowPolicy = resolveFollowPolicy;
exports.resolveReferencePolicy = resolveReferencePolicy;
exports.resolveTokenAllowanceRequest = resolveTokenAllowanceRequest;
exports.sessionDataVar = sessionDataVar;
exports.updateSessionData = updateSessionData;
exports.useSessionDataVar = useSessionDataVar;
