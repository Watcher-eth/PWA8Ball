import { ApolloError, FetchResult } from '@apollo/client';
import { CausedError } from '@lens-protocol/shared-kernel';
/**
 * @internal
 */
export declare enum ApolloServerErrorCode {
    BAD_REQUEST = "BAD_REQUEST",
    BAD_USER_INPUT = "BAD_USER_INPUT",
    FORBIDDEN = "FORBIDDEN",
    GRAPHQL_PARSE_FAILED = "GRAPHQL_PARSE_FAILED",
    GRAPHQL_VALIDATION_FAILED = "GRAPHQL_VALIDATION_FAILED",
    INTERNAL_SERVER_ERROR = "INTERNAL_SERVER_ERROR",
    OPERATION_RESOLUTION_FAILURE = "OPERATION_RESOLUTION_FAILURE",
    PERSISTED_QUERY_NOT_FOUND = "PERSISTED_QUERY_NOT_FOUND",
    PERSISTED_QUERY_NOT_SUPPORTED = "PERSISTED_QUERY_NOT_SUPPORTED",
    UNAUTHENTICATED = "UNAUTHENTICATED"
}
/**
 * @internal
 */
export declare function isValidationApolloError(e: unknown): e is ApolloError;
/**
 * @internal
 */
export declare function graphQLResultHasUnauthenticatedError<T>(result: FetchResult<T>): boolean | undefined;
/**
 * An unexpected error, usually from an API response.
 *
 * See the error message for more details.
 */
export declare class UnspecifiedError extends CausedError {
    name: "UnspecifiedError";
    constructor(cause: Error);
}
/**
 * A GraphQL validation error from the API.
 *
 * See the error message for more details.
 */
export declare class ValidationError extends CausedError {
    name: "ValidationError";
    constructor(cause: Error);
}
