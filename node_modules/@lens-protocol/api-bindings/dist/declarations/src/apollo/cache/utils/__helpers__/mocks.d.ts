import { MockedResponse } from '@apollo/client/testing';
import { DocumentNode } from 'graphql';
import { Cursor, CursorBasedPaginatedResult } from "../../../../lens/index.js";
/**
 * AST for:
 *
 * ```graphql
 * query GetHero($cursor: String!) {
 *   result: hero(cursor: $cursor) {
 *     items {
 *       name
 *     }
 *     pageInfo {
 *       ...PaginatedResultInfo
 *     }
 *   }
 * }
 * ```
 *
 * We couldn't use `graphql-tag` because it's does rely on fragment `DocumentNode` to
 * have `loc` property (from `gql` usage itself), which is not the case for our generated
 * fragments.
 */
export declare const AnyPaginatedQueryDocument: DocumentNode;
type AnyPaginatedItem = {
    name: string;
};
export type AnyPaginatedQueryVariables = {
    cursor?: string;
};
type AnyPaginatedQueryResult = CursorBasedPaginatedResult<AnyPaginatedItem>;
export type AnyPaginatedQueryData = {
    result: AnyPaginatedQueryResult;
};
export declare function mockAnyPaginatedQueryResult<T = AnyPaginatedItem>({ items, next, prev, }?: {
    items?: T[];
    next?: null;
    prev?: null;
} | {
    items?: [T];
    next?: Cursor | null;
    prev?: Cursor | null;
}): CursorBasedPaginatedResult<T>;
export declare function mockAnyPaginatedQueryResponse({ variables, result, }: {
    variables?: AnyPaginatedQueryVariables;
    result: AnyPaginatedQueryResult;
}): MockedResponse<AnyPaginatedQueryData>;
export {};
