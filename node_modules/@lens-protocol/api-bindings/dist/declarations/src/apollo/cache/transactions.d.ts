import { ProfileId, PublicationId, TransactionError } from '@lens-protocol/domain/entities';
import { LinkHandleRequest, UnlinkHandleRequest } from '@lens-protocol/domain/use-cases/profile';
import { AnyTransactionRequest } from '@lens-protocol/domain/use-cases/transactions';
export declare enum TxStatus {
    /**
     * A pending transaction is a transaction that is either mining or it's mined but not indexed yet.
     */
    PENDING = "pending",
    /**
     * A settled transaction is a transaction that is mined and indexed.
     */
    SETTLED = "settled",
    /**
     * A failed transaction is a transaction that failed to be broadcasted or it failed to be mined.
     */
    FAILED = "failed"
}
/**
 * Describe the state of a transaction and the originating request.
 */
export type TransactionState<T extends AnyTransactionRequest> = {
    status: TxStatus.PENDING | TxStatus.SETTLED;
    id: string;
    request: T;
    txHash?: string;
} | {
    status: TxStatus.FAILED;
    id: string;
    request: T;
    txHash?: string;
    error: TransactionError;
};
export declare const recentTransactionsVar: import("@apollo/client").ReactiveVar<TransactionState<AnyTransactionRequest>[]>;
export type TransactionStatusPredicate<T extends AnyTransactionRequest> = (txState: TransactionState<AnyTransactionRequest>) => txState is TransactionState<T>;
export declare function useRecentTransactionsVar(): TransactionState<AnyTransactionRequest>[];
export declare function countAnyPendingCollectFor(publicationId: PublicationId): number;
export declare function countAnyPendingCollect(): number;
export declare function countAnyPendingCreateCommentFor(publicationId: PublicationId): number;
export declare function countAnyPendingCreateMirrorFor(publicationId: PublicationId): number;
export declare function countAnyPendingCreateQuoteFor(publicationId: PublicationId): number;
export declare function hasPendingUnblockForProfile(profileId: ProfileId): boolean;
export declare function hasPendingBlockForProfile(profileId: ProfileId): boolean;
export declare function countPendingFollowFor(profileId: ProfileId): number;
export declare function countPendingUnfollowFor(profileId: ProfileId): number;
export declare function getPendingLinkHandleTxFor(profileId: ProfileId): TransactionState<LinkHandleRequest> | undefined;
export declare function getPendingUnlinkHandleTxFor(profileId: ProfileId): TransactionState<UnlinkHandleRequest> | undefined;
