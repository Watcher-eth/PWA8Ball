import { ILogger } from '@lens-protocol/shared-kernel';
import { SafeApolloClient } from "./SafeApolloClient.js";
import { QueryParams } from "./cache/createLensCache.js";
import { IAccessTokenStorage } from "./links/index.js";
export type { ContentInsightMatcher } from "./cache/utils/ContentInsight/index.js";
export { snapshotPoll, demoSnapshotPoll } from "./cache/utils/ContentInsight/index.js";
export type ApolloClientConfig = {
    accessTokenStorage: IAccessTokenStorage;
    uri: string;
    logger: ILogger;
    pollingInterval: number;
    queryParams: QueryParams;
};
export declare function createLensApolloClient({ accessTokenStorage, uri, logger, pollingInterval, queryParams, }: ApolloClientConfig): SafeApolloClient<import("@apollo/client").NormalizedCacheObject>;
export type AuthApolloClientConfig = {
    uri: string;
    logger: ILogger;
};
export declare function createAuthApolloClient({ uri, logger }: AuthApolloClientConfig): SafeApolloClient<import("@apollo/client").NormalizedCacheObject>;
export type SnapshotApolloClientConfig = {
    uri: string;
};
export declare function createSnapshotApolloClient({ uri }: SnapshotApolloClientConfig): SafeApolloClient<import("@apollo/client").NormalizedCacheObject>;
export type { IAccessTokenStorage };
export { defaultQueryParams } from "./cache/createLensCache.js";
export type { QueryParams };
export type { IGraphQLClient } from "./IGraphQLClient.js";
export * from "./errors.js";
export * from "./cache/transactions.js";
export * from "./cache/session.js";
export type { SafeApolloClient };
