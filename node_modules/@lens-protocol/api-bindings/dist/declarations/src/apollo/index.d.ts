import { ILogger } from '@lens-protocol/shared-kernel';
import { SafeApolloClient } from "./SafeApolloClient.js";
import { AuthLinkArgs, IAccessTokenStorage } from "./links/index.js";
export type ApolloClientConfig = AuthLinkArgs & {
    connectToDevTools?: boolean;
    logger: ILogger;
    pollingInterval: number;
    uri: string;
};
export declare function createLensApolloClient({ accessTokenStorage, uri, logger, pollingInterval, connectToDevTools, }: ApolloClientConfig): SafeApolloClient<import("@apollo/client").NormalizedCacheObject>;
export type AuthApolloClientConfig = {
    logger: ILogger;
    origin?: string;
    uri: string;
};
export declare function createAuthApolloClient({ logger, origin, uri }: AuthApolloClientConfig): SafeApolloClient<import("@apollo/client").NormalizedCacheObject>;
export type { IGraphQLClient } from "./IGraphQLClient.js";
export * from "./cache/session.js";
export * from "./cache/transactions.js";
export * from "./errors.js";
export type { IAccessTokenStorage, SafeApolloClient };
