import { PaginatedResultInfo, PublicationBookmarksVariables, PublicationVariables, PublicationsVariables, SearchPublicationsVariables } from "../../graphql/generated.js";
import { AnyPublication, PrimaryPublication } from "../../publication.js";
export declare function mockPublicationResponse({ variables, result, }: {
    variables: PublicationVariables;
    result: AnyPublication | null;
}): {
    request: {
        query: import("graphql").DocumentNode;
        variables: {
            fxRateFor: import("../../graphql/generated.js").SupportedFiatType;
            imageMediumSize: {};
            imageSmallSize: {};
            profileCoverSize: {};
            profilePictureSize: {};
        };
    };
    result: import("@apollo/client").FetchResult<Record<string, any>> | import("@apollo/client/testing").ResultFunction<import("@apollo/client").FetchResult<Record<string, any>>> | undefined;
};
export declare function mockPublicationsResponse({ variables, items, info, }: {
    variables: PublicationsVariables;
    items: Array<AnyPublication>;
    info?: PaginatedResultInfo;
}): {
    request: {
        query: import("graphql").DocumentNode;
        variables: import("../../graphql/generated.js").Exact<{
            where: import("../../graphql/generated.js").PublicationsWhere;
            limit?: import("../../graphql/generated.js").InputMaybe<import("../../graphql/generated.js").LimitType> | undefined;
            cursor?: import("../../graphql/generated.js").InputMaybe<import("../../index.js").Cursor> | undefined;
            imageSmallSize?: import("../../graphql/generated.js").InputMaybe<import("../../graphql/generated.js").ImageTransform> | undefined;
            imageMediumSize?: import("../../graphql/generated.js").InputMaybe<import("../../graphql/generated.js").ImageTransform> | undefined;
            profileCoverSize?: import("../../graphql/generated.js").InputMaybe<import("../../graphql/generated.js").ImageTransform> | undefined;
            profilePictureSize?: import("../../graphql/generated.js").InputMaybe<import("../../graphql/generated.js").ImageTransform> | undefined;
            activityOn?: import("../../graphql/generated.js").InputMaybe<import("@lens-protocol/domain/entities").AppId | import("@lens-protocol/domain/entities").AppId[]> | undefined;
            fxRateFor?: import("../../graphql/generated.js").InputMaybe<import("../../graphql/generated.js").SupportedFiatType> | undefined;
        }> & {
            fxRateFor: import("../../graphql/generated.js").SupportedFiatType;
            imageMediumSize: {};
            imageSmallSize: {};
            profileCoverSize: {};
            profilePictureSize: {};
        };
    };
    result: {
        data: {
            result: {
                items: AnyPublication[];
                pageInfo: PaginatedResultInfo;
            };
        };
    };
};
export declare function mockSearchPublicationsResponse({ variables, items, info, }: {
    variables: SearchPublicationsVariables;
    items: Array<PrimaryPublication>;
    info?: PaginatedResultInfo;
}): {
    request: {
        query: import("graphql").DocumentNode;
        variables: import("../../graphql/generated.js").Exact<{
            query: string;
            where?: import("../../graphql/generated.js").InputMaybe<import("../../graphql/generated.js").PublicationSearchWhere> | undefined;
            limit?: import("../../graphql/generated.js").InputMaybe<import("../../graphql/generated.js").LimitType> | undefined;
            cursor?: import("../../graphql/generated.js").InputMaybe<import("../../index.js").Cursor> | undefined;
            imageSmallSize?: import("../../graphql/generated.js").InputMaybe<import("../../graphql/generated.js").ImageTransform> | undefined;
            imageMediumSize?: import("../../graphql/generated.js").InputMaybe<import("../../graphql/generated.js").ImageTransform> | undefined;
            profileCoverSize?: import("../../graphql/generated.js").InputMaybe<import("../../graphql/generated.js").ImageTransform> | undefined;
            profilePictureSize?: import("../../graphql/generated.js").InputMaybe<import("../../graphql/generated.js").ImageTransform> | undefined;
            activityOn?: import("../../graphql/generated.js").InputMaybe<import("@lens-protocol/domain/entities").AppId | import("@lens-protocol/domain/entities").AppId[]> | undefined;
            fxRateFor?: import("../../graphql/generated.js").InputMaybe<import("../../graphql/generated.js").SupportedFiatType> | undefined;
        }> & {
            fxRateFor: import("../../graphql/generated.js").SupportedFiatType;
            imageMediumSize: {};
            imageSmallSize: {};
            profileCoverSize: {};
            profilePictureSize: {};
        };
    };
    result: {
        data: {
            result: {
                items: PrimaryPublication[];
                pageInfo: PaginatedResultInfo;
            };
        };
    };
};
export declare function mockProfileBookmarksResponse({ variables, items, info, }: {
    variables: PublicationBookmarksVariables;
    items: AnyPublication[];
    info?: PaginatedResultInfo;
}): {
    request: {
        query: import("graphql").DocumentNode;
        variables: import("../../graphql/generated.js").Exact<{
            request: import("../../graphql/generated.js").PublicationBookmarksRequest;
            imageSmallSize?: import("../../graphql/generated.js").InputMaybe<import("../../graphql/generated.js").ImageTransform> | undefined;
            imageMediumSize?: import("../../graphql/generated.js").InputMaybe<import("../../graphql/generated.js").ImageTransform> | undefined;
            profileCoverSize?: import("../../graphql/generated.js").InputMaybe<import("../../graphql/generated.js").ImageTransform> | undefined;
            profilePictureSize?: import("../../graphql/generated.js").InputMaybe<import("../../graphql/generated.js").ImageTransform> | undefined;
            activityOn?: import("../../graphql/generated.js").InputMaybe<import("@lens-protocol/domain/entities").AppId | import("@lens-protocol/domain/entities").AppId[]> | undefined;
            fxRateFor?: import("../../graphql/generated.js").InputMaybe<import("../../graphql/generated.js").SupportedFiatType> | undefined;
        }> & {
            fxRateFor: import("../../graphql/generated.js").SupportedFiatType;
            imageMediumSize: {};
            imageSmallSize: {};
            profileCoverSize: {};
            profilePictureSize: {};
        };
    };
    result: {
        data: {
            result: {
                items: AnyPublication[];
                pageInfo: PaginatedResultInfo;
            };
        };
    };
};
