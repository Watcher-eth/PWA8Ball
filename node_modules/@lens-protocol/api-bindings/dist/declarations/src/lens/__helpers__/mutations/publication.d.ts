import { MockedResponse } from '@apollo/client/testing';
import { Nonce } from '@lens-protocol/domain/entities';
import { AddPublicationBookmarkData, AddPublicationBookmarkVariables, AddPublicationNotInterestedData, AddPublicationNotInterestedVariables, AddReactionVariables, CommentOnchainData, CommentOnchainVariables, CommentOnMomokaData, CommentOnMomokaVariables, CreateLegacyCollectTypedDataData, CreateLegacyCollectTypedDataVariables, CreateMomokaCommentTypedDataData, CreateMomokaCommentTypedDataVariables, CreateMomokaMirrorTypedDataData, CreateMomokaMirrorTypedDataVariables, CreateMomokaPostTypedDataData, CreateMomokaPostTypedDataVariables, CreateMomokaPublicationResult, CreateMomokaQuoteTypedDataData, CreateMomokaQuoteTypedDataVariables, CreateOnchainCommentTypedDataData, CreateOnchainCommentTypedDataVariables, CreateOnchainMirrorTypedDataData, CreateOnchainMirrorTypedDataVariables, CreateOnchainPostTypedDataData, CreateOnchainPostTypedDataVariables, CreateOnchainQuoteTypedDataData, CreateOnchainQuoteTypedDataVariables, HidePublicationData, HidePublicationVariables, LegacyCollectData, LegacyCollectVariables, MirrorOnchainData, MirrorOnchainVariables, MirrorOnMomokaData, MirrorOnMomokaVariables, PostOnchainData, PostOnchainVariables, PostOnMomokaData, PostOnMomokaVariables, QuoteOnchainData, QuoteOnchainVariables, QuoteOnMomokaData, QuoteOnMomokaVariables, RemovePublicationBookmarkData, RemovePublicationBookmarkVariables, RemoveReactionVariables, ReportPublicationData, ReportPublicationVariables, UndoPublicationNotInterestedData, UndoPublicationNotInterestedVariables } from "../../graphql/generated.js";
export declare function mockHidePublicationResponse(args: {
    variables: HidePublicationVariables;
}): MockedResponse<HidePublicationData>;
export declare function mockReportPublicationResponse(args: {
    variables: ReportPublicationVariables;
}): MockedResponse<ReportPublicationData>;
export declare function mockAddReactionResponse({ variables }: {
    variables: AddReactionVariables;
}): {
    request: {
        query: import("graphql").DocumentNode;
        variables: import("../../graphql/generated.js").Exact<{
            request: import("../../graphql/generated.js").ReactionRequest;
        }>;
    };
    result: {
        data: {
            addReaction: null;
        };
    };
};
export declare function mockRemoveReactionResponse({ variables }: {
    variables: RemoveReactionVariables;
}): {
    request: {
        query: import("graphql").DocumentNode;
        variables: import("../../graphql/generated.js").Exact<{
            request: import("../../graphql/generated.js").ReactionRequest;
        }>;
    };
    result: {
        data: {
            removeReaction: null;
        };
    };
};
export declare function mockCreateOnchainPostTypedDataData({ nonce, }?: {
    nonce?: Nonce;
}): CreateOnchainPostTypedDataData;
export declare function mockCreateOnchainPostTypedDataResponse<T extends CreateOnchainPostTypedDataData>({ variables, data, }: {
    variables: CreateOnchainPostTypedDataVariables;
    data: T;
}): MockedResponse<T>;
export declare function mockPostOnchainResponse<T extends PostOnchainData, V extends PostOnchainVariables>({ variables, data, }: {
    variables: V;
    data: T;
}): MockedResponse<T, V>;
export declare function mockCreateMomokaPostTypedDataData({ nonce, }?: {
    nonce?: Nonce;
}): CreateMomokaPostTypedDataData;
export declare function mockCreateMomokaPostTypedDataResponse<T extends CreateMomokaPostTypedDataData>({ variables, data, }: {
    variables: CreateMomokaPostTypedDataVariables;
    data: T;
}): MockedResponse<T>;
export declare function mockPostOnMomokaResponse<T extends PostOnMomokaData, V extends PostOnMomokaVariables>({ variables, data }: {
    variables: V;
    data: T;
}): MockedResponse<T, V>;
export declare function mockCreateMomokaPublicationResult(): CreateMomokaPublicationResult;
export declare function mockCreateOnchainCommentTypedDataData({ nonce, }?: {
    nonce?: Nonce;
}): CreateOnchainCommentTypedDataData;
export declare function mockCreateOnchainCommentTypedDataResponse<T extends CreateOnchainCommentTypedDataData>({ variables, data, }: {
    variables: CreateOnchainCommentTypedDataVariables;
    data: T;
}): MockedResponse<T>;
export declare function mockCommentOnchainResponse<T extends CommentOnchainData, V extends CommentOnchainVariables>({ variables, data }: {
    variables: V;
    data: T;
}): MockedResponse<T, V>;
export declare function mockCreateMomokaCommentTypedDataData({ nonce, }?: {
    nonce?: Nonce;
}): CreateMomokaCommentTypedDataData;
export declare function mockCreateMomokaCommentTypedDataResponse<T extends CreateMomokaCommentTypedDataData>({ variables, data, }: {
    variables: CreateMomokaCommentTypedDataVariables;
    data: T;
}): MockedResponse<T>;
export declare function mockCommentOnMomokaResponse<T extends CommentOnMomokaData, V extends CommentOnMomokaVariables>({ variables, data }: {
    variables: V;
    data: T;
}): MockedResponse<T, V>;
export declare function mockCreateMomokaMirrorTypedDataData({ nonce, }?: {
    nonce?: Nonce;
}): CreateMomokaMirrorTypedDataData;
export declare function mockCreateMomokaMirrorTypedDataResponse<T extends CreateMomokaMirrorTypedDataData>({ variables, data, }: {
    variables: CreateMomokaMirrorTypedDataVariables;
    data: T;
}): MockedResponse<T>;
export declare function mockMirrorOnMomokaResponse<T extends MirrorOnMomokaData, V extends MirrorOnMomokaVariables>({ variables, data }: {
    variables: V;
    data: T;
}): MockedResponse<T, V>;
export declare function mockCreateOnchainMirrorTypedDataData({ nonce, }?: {
    nonce?: Nonce;
}): CreateOnchainMirrorTypedDataData;
export declare function mockCreateOnchainMirrorTypedDataResponse<T extends CreateOnchainMirrorTypedDataData>({ variables, data, }: {
    variables: CreateOnchainMirrorTypedDataVariables;
    data: T;
}): MockedResponse<T>;
export declare function mockMirrorOnchainResponse<T extends MirrorOnchainData, V extends MirrorOnchainVariables>({ variables, data }: {
    variables: V;
    data: T;
}): MockedResponse<T, V>;
export declare function mockCreateOnchainQuoteTypedDataData({ nonce, }?: {
    nonce?: Nonce;
}): CreateOnchainQuoteTypedDataData;
export declare function mockCreateOnchainQuoteTypedDataResponse<T extends CreateOnchainQuoteTypedDataData>({ variables, data, }: {
    variables: CreateOnchainQuoteTypedDataVariables;
    data: T;
}): MockedResponse<T>;
export declare function mockQuoteOnchainResponse<T extends QuoteOnchainData, V extends QuoteOnchainVariables>({ variables, data }: {
    variables: V;
    data: T;
}): MockedResponse<T, V>;
export declare function mockCreateMomokaQuoteTypedDataData({ nonce, }?: {
    nonce?: Nonce;
}): CreateMomokaQuoteTypedDataData;
export declare function mockCreateMomokaQuoteTypedDataResponse<T extends CreateMomokaQuoteTypedDataData>({ variables, data, }: {
    variables: CreateMomokaQuoteTypedDataVariables;
    data: T;
}): MockedResponse<T>;
export declare function mockQuoteOnMomokaResponse<T extends QuoteOnMomokaData, V extends QuoteOnMomokaVariables>({ variables, data }: {
    variables: V;
    data: T;
}): MockedResponse<T, V>;
export declare function mockAddToMyBookmarksResponse(variables: AddPublicationBookmarkVariables): MockedResponse<AddPublicationBookmarkData>;
export declare function mockRemoveFromMyBookmarksResponse(variables: RemovePublicationBookmarkVariables): MockedResponse<RemovePublicationBookmarkData>;
export declare function mockCreateLegacyCollectTypedDataData({ nonce, }?: {
    nonce?: Nonce;
}): CreateLegacyCollectTypedDataData;
export declare function mockCreateLegacyCollectTypedDataResponse<T extends CreateLegacyCollectTypedDataData, V extends CreateLegacyCollectTypedDataVariables>({ variables, data }: {
    variables: V;
    data: T;
}): MockedResponse<T, V>;
export declare function mockLegacyCollectResponse<T extends LegacyCollectData, V extends LegacyCollectVariables>({ variables, data }: {
    variables: V;
    data: T;
}): MockedResponse<T, V>;
export declare function mockAddPublicationNotInterestedResponse(variables: AddPublicationNotInterestedVariables): MockedResponse<AddPublicationNotInterestedData>;
export declare function mockUndoPublicationNotInterestedResponse(variables: UndoPublicationNotInterestedVariables): MockedResponse<UndoPublicationNotInterestedData>;
