import { ExploreProfilesVariables, FeedVariables, FeedItem, FeedHighlight, FeedHighlightsVariables, ExplorePublicationsVariables, ExplorePublication, Profile } from "../../graphql/generated.js";
export declare function mockFeedResponse({ variables, items, }: {
    variables: FeedVariables;
    items: FeedItem[];
}): {
    request: {
        query: import("graphql").DocumentNode;
        variables: import("../../graphql/generated.js").Exact<{
            where?: import("../../graphql/generated.js").InputMaybe<import("../../graphql/generated.js").FeedWhere> | undefined;
            cursor?: import("../../graphql/generated.js").InputMaybe<import("../../index.js").Cursor> | undefined;
            imageSmallSize?: import("../../graphql/generated.js").InputMaybe<import("../../graphql/generated.js").ImageTransform> | undefined;
            imageMediumSize?: import("../../graphql/generated.js").InputMaybe<import("../../graphql/generated.js").ImageTransform> | undefined;
            profileCoverSize?: import("../../graphql/generated.js").InputMaybe<import("../../graphql/generated.js").ImageTransform> | undefined;
            profilePictureSize?: import("../../graphql/generated.js").InputMaybe<import("../../graphql/generated.js").ImageTransform> | undefined;
            activityOn?: import("../../graphql/generated.js").InputMaybe<import("@lens-protocol/domain/entities").AppId | import("@lens-protocol/domain/entities").AppId[]> | undefined;
            fxRateFor?: import("../../graphql/generated.js").InputMaybe<import("../../graphql/generated.js").SupportedFiatType> | undefined;
        }> & {
            fxRateFor: import("../../graphql/generated.js").SupportedFiatType;
            imageMediumSize: {};
            imageSmallSize: {};
            profileCoverSize: {};
            profilePictureSize: {};
        };
    };
    result: {
        data: {
            result: {
                items: FeedItem[];
                pageInfo: import("../../graphql/generated.js").PaginatedResultInfo;
            };
        };
    };
};
export declare function mockExplorePublicationsResponse(args: {
    variables: ExplorePublicationsVariables;
    items: ExplorePublication[];
}): {
    request: {
        query: import("graphql").DocumentNode;
        variables: import("../../graphql/generated.js").Exact<{
            orderBy: import("../../graphql/generated.js").ExplorePublicationsOrderByType;
            where?: import("../../graphql/generated.js").InputMaybe<import("../../graphql/generated.js").ExplorePublicationsWhere> | undefined;
            limit?: import("../../graphql/generated.js").InputMaybe<import("../../graphql/generated.js").LimitType> | undefined;
            cursor?: import("../../graphql/generated.js").InputMaybe<import("../../index.js").Cursor> | undefined;
            imageSmallSize?: import("../../graphql/generated.js").InputMaybe<import("../../graphql/generated.js").ImageTransform> | undefined;
            imageMediumSize?: import("../../graphql/generated.js").InputMaybe<import("../../graphql/generated.js").ImageTransform> | undefined;
            profileCoverSize?: import("../../graphql/generated.js").InputMaybe<import("../../graphql/generated.js").ImageTransform> | undefined;
            profilePictureSize?: import("../../graphql/generated.js").InputMaybe<import("../../graphql/generated.js").ImageTransform> | undefined;
            activityOn?: import("../../graphql/generated.js").InputMaybe<import("@lens-protocol/domain/entities").AppId | import("@lens-protocol/domain/entities").AppId[]> | undefined;
            fxRateFor?: import("../../graphql/generated.js").InputMaybe<import("../../graphql/generated.js").SupportedFiatType> | undefined;
        }> & {
            fxRateFor: import("../../graphql/generated.js").SupportedFiatType;
            imageMediumSize: {};
            imageSmallSize: {};
            profileCoverSize: {};
            profilePictureSize: {};
        };
    };
    result: {
        data: {
            result: {
                items: ExplorePublication[];
                pageInfo: import("../../graphql/generated.js").PaginatedResultInfo;
            };
        };
    };
};
export declare function mockFeedHighlightsResponse({ variables, items, }: {
    variables: FeedHighlightsVariables;
    items: FeedHighlight[];
}): {
    request: {
        query: import("graphql").DocumentNode;
        variables: import("../../graphql/generated.js").Exact<{
            where?: import("../../graphql/generated.js").InputMaybe<import("../../graphql/generated.js").FeedHighlightsWhere> | undefined;
            limit?: import("../../graphql/generated.js").InputMaybe<import("../../graphql/generated.js").LimitType> | undefined;
            cursor?: import("../../graphql/generated.js").InputMaybe<import("../../index.js").Cursor> | undefined;
            imageSmallSize?: import("../../graphql/generated.js").InputMaybe<import("../../graphql/generated.js").ImageTransform> | undefined;
            imageMediumSize?: import("../../graphql/generated.js").InputMaybe<import("../../graphql/generated.js").ImageTransform> | undefined;
            profileCoverSize?: import("../../graphql/generated.js").InputMaybe<import("../../graphql/generated.js").ImageTransform> | undefined;
            profilePictureSize?: import("../../graphql/generated.js").InputMaybe<import("../../graphql/generated.js").ImageTransform> | undefined;
            activityOn?: import("../../graphql/generated.js").InputMaybe<import("@lens-protocol/domain/entities").AppId | import("@lens-protocol/domain/entities").AppId[]> | undefined;
            fxRateFor?: import("../../graphql/generated.js").InputMaybe<import("../../graphql/generated.js").SupportedFiatType> | undefined;
        }> & {
            fxRateFor: import("../../graphql/generated.js").SupportedFiatType;
            imageMediumSize: {};
            imageSmallSize: {};
            profileCoverSize: {};
            profilePictureSize: {};
        };
    };
    result: {
        data: {
            result: {
                items: FeedHighlight[];
                pageInfo: import("../../graphql/generated.js").PaginatedResultInfo;
            };
        };
    };
};
export declare function mockExploreProfilesResponse({ variables, items, }: {
    variables: ExploreProfilesVariables;
    items: Profile[];
}): {
    request: {
        query: import("graphql").DocumentNode;
        variables: import("../../graphql/generated.js").Exact<{
            where?: import("../../graphql/generated.js").InputMaybe<import("../../graphql/generated.js").ExploreProfilesWhere> | undefined;
            orderBy: import("../../graphql/generated.js").ExploreProfilesOrderByType;
            limit?: import("../../graphql/generated.js").InputMaybe<import("../../graphql/generated.js").LimitType> | undefined;
            cursor?: import("../../graphql/generated.js").InputMaybe<import("../../index.js").Cursor> | undefined;
            profileCoverSize?: import("../../graphql/generated.js").InputMaybe<import("../../graphql/generated.js").ImageTransform> | undefined;
            profilePictureSize?: import("../../graphql/generated.js").InputMaybe<import("../../graphql/generated.js").ImageTransform> | undefined;
            activityOn?: import("../../graphql/generated.js").InputMaybe<import("@lens-protocol/domain/entities").AppId | import("@lens-protocol/domain/entities").AppId[]> | undefined;
            fxRateFor?: import("../../graphql/generated.js").InputMaybe<import("../../graphql/generated.js").SupportedFiatType> | undefined;
        }> & {
            fxRateFor: import("../../graphql/generated.js").SupportedFiatType;
            imageMediumSize: {};
            imageSmallSize: {};
            profileCoverSize: {};
            profilePictureSize: {};
        };
    };
    result: {
        data: {
            result: {
                items: Profile[];
                pageInfo: import("../../graphql/generated.js").PaginatedResultInfo;
            };
        };
    };
};
