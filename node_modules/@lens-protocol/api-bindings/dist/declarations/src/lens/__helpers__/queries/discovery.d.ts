import { ExploreProfilesVariables, FeedVariables, FeedItem, FeedHighlight, FeedHighlightsVariables, ExplorePublicationsVariables, ExplorePublication, Profile } from "../../graphql/generated.js";
export declare function mockFeedResponse({ variables, items, }: {
    variables: Pick<FeedVariables, 'where'>;
    items: FeedItem[];
}): {
    request: {
        query: import("graphql").DocumentNode;
    };
    variableMatcher: (variables: import("@apollo/client").OperationVariables) => boolean;
    result: import("@apollo/client").FetchResult<Record<string, any>> | import("@apollo/client/testing").ResultFunction<import("@apollo/client").FetchResult<Record<string, any>>, Record<string, any>> | undefined;
};
export declare function mockExplorePublicationsResponse(args: {
    variables: Pick<ExplorePublicationsVariables, 'limit' | 'orderBy' | 'where'>;
    items: ExplorePublication[];
}): {
    request: {
        query: import("graphql").DocumentNode;
    };
    variableMatcher: (variables: import("@apollo/client").OperationVariables) => boolean;
    result: import("@apollo/client").FetchResult<Record<string, any>> | import("@apollo/client/testing").ResultFunction<import("@apollo/client").FetchResult<Record<string, any>>, Record<string, any>> | undefined;
};
export declare function mockFeedHighlightsResponse({ variables, items, }: {
    variables: Pick<FeedHighlightsVariables, 'limit' | 'where'>;
    items: FeedHighlight[];
}): {
    request: {
        query: import("graphql").DocumentNode;
    };
    variableMatcher: (variables: import("@apollo/client").OperationVariables) => boolean;
    result: import("@apollo/client").FetchResult<Record<string, any>> | import("@apollo/client/testing").ResultFunction<import("@apollo/client").FetchResult<Record<string, any>>, Record<string, any>> | undefined;
};
export declare function mockExploreProfilesResponse({ variables, items, }: {
    variables: Pick<ExploreProfilesVariables, 'limit' | 'orderBy' | 'where'>;
    items: Profile[];
}): {
    request: {
        query: import("graphql").DocumentNode;
    };
    variableMatcher: (variables: import("@apollo/client").OperationVariables) => boolean;
    result: import("@apollo/client").FetchResult<Record<string, any>> | import("@apollo/client/testing").ResultFunction<import("@apollo/client").FetchResult<Record<string, any>>, Record<string, any>> | undefined;
};
