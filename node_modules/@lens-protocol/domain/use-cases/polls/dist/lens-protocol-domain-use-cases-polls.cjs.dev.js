'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var asyncToGenerator = require('../../../dist/asyncToGenerator-ba66657c.cjs.dev.js');
var createClass = require('../../../dist/createClass-d9d3c60f.cjs.dev.js');
var sharedKernel = require('@lens-protocol/shared-kernel');

var VotePoll = /*#__PURE__*/function () {
  function VotePoll(factory, activeWallet, presenter, relayer) {
    createClass._classCallCheck(this, VotePoll);
    this.factory = factory;
    this.activeWallet = activeWallet;
    this.presenter = presenter;
    this.relayer = relayer;
  }
  createClass._createClass(VotePoll, [{
    key: "execute",
    value: function () {
      var _execute = asyncToGenerator._asyncToGenerator( /*#__PURE__*/asyncToGenerator._regeneratorRuntime().mark(function _callee(_ref) {
        var pollId, choice, wallet, unsignedVote, result;
        return asyncToGenerator._regeneratorRuntime().wrap(function _callee$(_context) {
          while (1) switch (_context.prev = _context.next) {
            case 0:
              pollId = _ref.pollId, choice = _ref.choice;
              _context.next = 3;
              return this.activeWallet.requireActiveWallet();
            case 3:
              wallet = _context.sent;
              _context.next = 6;
              return this.factory.createUnsignedVote({
                pollId: pollId,
                choice: choice,
                voter: wallet
              });
            case 6:
              unsignedVote = _context.sent;
              _context.next = 9;
              return wallet.signVote(unsignedVote);
            case 9:
              result = _context.sent;
              if (!result.isFailure()) {
                _context.next = 13;
                break;
              }
              this.presenter.present(result);
              return _context.abrupt("return");
            case 13:
              _context.next = 15;
              return this.relayer.relay(result.value);
            case 15:
              this.presenter.present(sharedKernel.success());
            case 16:
            case "end":
              return _context.stop();
          }
        }, _callee, this);
      }));
      function execute(_x) {
        return _execute.apply(this, arguments);
      }
      return execute;
    }()
  }]);
  return VotePoll;
}();

exports.VotePoll = VotePoll;
