import { Result } from '@ethersproject/abi';
export type ModuleParam = {
    name: string;
    type: string;
    components?: ModuleParam[];
};
/**
 * Encode data for a contract method call
 *
 * @param abi - array of types to encode
 * @param data - array of data to encode
 * @returns encoded calldata
 *
 * @example
 * ```ts
 * const calldata = encodeData(
 *   JSON.parse(result.metadata.processCalldataABI) as ModuleParam[],
 *   [ 'value1', 'value2' ]
 * );
 * ```
 */
export declare function encodeData(abi: ModuleParam[], data: (string | boolean | string[] | string[][])[]): string;
/**
 *
 * @param abi - array of types to decode
 * @param calldata - data to decode
 * @returns decoded data
 *
 * @example
 * ```ts
 * const result = decodeData(
 *   JSON.parse(result.metadata.initializeResultDataABI) as ModuleParam[],
 *   openActionSettings.initializeResultData
 * );
 * ```
 */
export declare function decodeData(abi: ModuleParam[], calldata: string): Result;
