"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["node_modules_thirdweb-dev_wallets_dist_zk-connector-9df28418_browser_esm_js"],{

/***/ "./node_modules/@thirdweb-dev/wallets/dist/http-rpc-client-29e9bef8.browser.esm.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@thirdweb-dev/wallets/dist/http-rpc-client-29e9bef8.browser.esm.js ***!
  \*****************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   D: function() { return /* binding */ DEBUG; },\n/* harmony export */   H: function() { return /* binding */ HttpRpcClient; },\n/* harmony export */   g: function() { return /* binding */ getUserOpHashV06; },\n/* harmony export */   h: function() { return /* binding */ hexlifyUserOp; },\n/* harmony export */   r: function() { return /* binding */ randomNonce; }\n/* harmony export */ });\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ethers */ \"./node_modules/@ethersproject/properties/lib.esm/index.js\");\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ethers */ \"./node_modules/@ethersproject/bytes/lib.esm/index.js\");\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ethers */ \"./node_modules/@ethersproject/keccak256/lib.esm/index.js\");\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ethers */ \"./node_modules/@ethersproject/abi/lib.esm/abi-coder.js\");\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ethers */ \"./node_modules/@ethersproject/bignumber/lib.esm/bignumber.js\");\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ethers */ \"./node_modules/@ethersproject/providers/lib.esm/url-json-rpc-provider.js\");\n/* harmony import */ var _url_a45219bd_browser_esm_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./url-a45219bd.browser.esm.js */ \"./node_modules/@thirdweb-dev/wallets/dist/url-a45219bd.browser.esm.js\");\n/* harmony import */ var _headers_b98dea62_browser_esm_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./headers-b98dea62.browser.esm.js */ \"./node_modules/@thirdweb-dev/wallets/dist/headers-b98dea62.browser.esm.js\");\n/* harmony import */ var _utils_5fdc349b_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./utils-5fdc349b.browser.esm.js */ \"./node_modules/@thirdweb-dev/wallets/dist/utils-5fdc349b.browser.esm.js\");\n\n\n\n\n\nasync function hexlifyUserOp(\n// TODO: types\nop) {\n  const userOp = await ethers__WEBPACK_IMPORTED_MODULE_0__.resolveProperties(op);\n  return Object.keys(userOp).map(key => {\n    let val = userOp[key];\n    if (typeof val !== \"string\" || !val.startsWith(\"0x\")) {\n      val = ethers__WEBPACK_IMPORTED_MODULE_1__.hexValue(val);\n    }\n    return [key, val];\n  }).reduce((set, _ref) => {\n    let [k, v] = _ref;\n    return {\n      ...set,\n      [k]: v\n    };\n  }, {});\n}\n\n// v0.6 userOpHash calculation\nasync function getUserOpHashV06(userOp, entryPoint, chainId) {\n  const op = await ethers__WEBPACK_IMPORTED_MODULE_0__.resolveProperties(userOp);\n  const hashedUserOp = {\n    sender: op.sender,\n    nonce: op.nonce,\n    initCodeHash: ethers__WEBPACK_IMPORTED_MODULE_2__.keccak256(op.initCode),\n    callDataHash: ethers__WEBPACK_IMPORTED_MODULE_2__.keccak256(op.callData),\n    callGasLimit: op.callGasLimit,\n    verificationGasLimit: op.verificationGasLimit,\n    preVerificationGas: op.preVerificationGas,\n    maxFeePerGas: op.maxFeePerGas,\n    maxPriorityFeePerGas: op.maxPriorityFeePerGas,\n    paymasterAndDataHash: ethers__WEBPACK_IMPORTED_MODULE_2__.keccak256(op.paymasterAndData)\n  };\n  const userOpType = {\n    components: [{\n      type: \"address\",\n      name: \"sender\"\n    }, {\n      type: \"uint256\",\n      name: \"nonce\"\n    }, {\n      type: \"bytes32\",\n      name: \"initCodeHash\"\n    }, {\n      type: \"bytes32\",\n      name: \"callDataHash\"\n    }, {\n      type: \"uint256\",\n      name: \"callGasLimit\"\n    }, {\n      type: \"uint256\",\n      name: \"verificationGasLimit\"\n    }, {\n      type: \"uint256\",\n      name: \"preVerificationGas\"\n    }, {\n      type: \"uint256\",\n      name: \"maxFeePerGas\"\n    }, {\n      type: \"uint256\",\n      name: \"maxPriorityFeePerGas\"\n    }, {\n      type: \"bytes32\",\n      name: \"paymasterAndDataHash\"\n    }],\n    name: \"hashedUserOp\",\n    type: \"tuple\"\n  };\n  const encoded = ethers__WEBPACK_IMPORTED_MODULE_3__.defaultAbiCoder.encode([userOpType], [{\n    ...hashedUserOp\n  }]);\n  // remove leading word (total length) and trailing word (zero-length signature)\n\n  const userOpHash = ethers__WEBPACK_IMPORTED_MODULE_2__.keccak256(encoded);\n  const enc = ethers__WEBPACK_IMPORTED_MODULE_3__.defaultAbiCoder.encode([\"bytes32\", \"address\", \"uint256\"], [userOpHash, entryPoint, chainId]);\n  return ethers__WEBPACK_IMPORTED_MODULE_2__.keccak256(enc);\n}\nconst generateRandomUint192 = () => {\n  const rand1 = BigInt(Math.floor(Math.random() * 0x100000000));\n  const rand2 = BigInt(Math.floor(Math.random() * 0x100000000));\n  const rand3 = BigInt(Math.floor(Math.random() * 0x100000000));\n  const rand4 = BigInt(Math.floor(Math.random() * 0x100000000));\n  const rand5 = BigInt(Math.floor(Math.random() * 0x100000000));\n  const rand6 = BigInt(Math.floor(Math.random() * 0x100000000));\n  return rand1 << BigInt(160) | rand2 << BigInt(128) | rand3 << BigInt(96) | rand4 << BigInt(64) | rand5 << BigInt(32) | rand6;\n};\nconst randomNonce = () => {\n  let hexString = generateRandomUint192().toString(16);\n  if (hexString.length % 2 !== 0) {\n    hexString = \"0\" + hexString;\n  }\n  hexString = \"0x\" + hexString;\n  return ethers__WEBPACK_IMPORTED_MODULE_4__.BigNumber.from(ethers__WEBPACK_IMPORTED_MODULE_1__.concat([hexString, \"0x0000000000000000\"]));\n};\n\nconst DEBUG = false; // TODO set as public flag\n\nclass HttpRpcClient {\n  constructor(bundlerUrl, entryPointAddress, chainId, clientId, secretKey) {\n    this.bundlerUrl = bundlerUrl;\n    this.entryPointAddress = entryPointAddress;\n    this.chainId = chainId;\n    const headers = {};\n    if ((0,_url_a45219bd_browser_esm_js__WEBPACK_IMPORTED_MODULE_5__.i)(this.bundlerUrl)) {\n      const bundleId = typeof globalThis !== \"undefined\" && \"APP_BUNDLE_ID\" in globalThis ? globalThis.APP_BUNDLE_ID : undefined;\n      if (secretKey) {\n        headers[\"x-secret-key\"] = secretKey;\n      } else if (clientId) {\n        headers[\"x-client-id\"] = clientId;\n        if (bundleId) {\n          headers[\"x-bundle-id\"] = bundleId;\n        }\n      }\n\n      // Dashboard token\n      if (typeof globalThis !== \"undefined\" && \"TW_AUTH_TOKEN\" in globalThis && typeof globalThis.TW_AUTH_TOKEN === \"string\") {\n        headers[\"authorization\"] = `Bearer ${globalThis.TW_AUTH_TOKEN}`;\n      }\n\n      // CLI token\n      if (typeof globalThis !== \"undefined\" && \"TW_CLI_AUTH_TOKEN\" in globalThis && typeof globalThis.TW_CLI_AUTH_TOKEN === \"string\") {\n        headers[\"authorization\"] = `Bearer ${globalThis.TW_CLI_AUTH_TOKEN}`;\n        headers[\"x-authorize-wallet\"] = \"true\";\n      }\n      (0,_headers_b98dea62_browser_esm_js__WEBPACK_IMPORTED_MODULE_6__.s)(headers);\n    }\n    this.userOpJsonRpcProvider = new ethers__WEBPACK_IMPORTED_MODULE_7__.StaticJsonRpcProvider({\n      url: this.bundlerUrl,\n      headers\n    }, {\n      name: \"Connected bundler network\",\n      chainId\n    });\n    this.initializing = this.validateChainId();\n  }\n  async validateChainId() {\n    if (await (0,_utils_5fdc349b_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.e)(this.chainId)) {\n      return;\n    }\n    // validate chainId is in sync with expected chainid\n    const chain = await this.userOpJsonRpcProvider.send(\"eth_chainId\", []);\n    const bundlerChain = parseInt(chain);\n    if (bundlerChain !== this.chainId) {\n      throw new Error(`bundler ${this.bundlerUrl} is on chainId ${bundlerChain}, but provider is on chainId ${this.chainId}`);\n    }\n  }\n\n  /**\n   * send a UserOperation to the bundler\n   * @param userOp1 - The UserOperation to send\n   * @returns userOpHash the id of this operation, for getUserOperationTransaction\n   */\n  async sendUserOpToBundler(userOp1) {\n    await this.initializing;\n    const hexifiedUserOp = await hexlifyUserOp(userOp1);\n    const jsonRequestData = [hexifiedUserOp, this.entryPointAddress];\n    await this.printUserOperation(\"eth_sendUserOperation\", jsonRequestData);\n    return await this.userOpJsonRpcProvider.send(\"eth_sendUserOperation\", [hexifiedUserOp, this.entryPointAddress]);\n  }\n  async estimateUserOpGas(userOp) {\n    await this.initializing;\n    const hexifiedUserOp = await hexlifyUserOp(userOp);\n    const jsonRequestData = [hexifiedUserOp, this.entryPointAddress];\n    await this.printUserOperation(\"eth_estimateUserOperationGas\", jsonRequestData);\n    const data = await this.userOpJsonRpcProvider.send(\"eth_estimateUserOperationGas\", [hexifiedUserOp, this.entryPointAddress]);\n    // adds gas buffer to callGasLimit to account for ManagedAccountFactory delegate calls\n    return {\n      preVerificationGas: ethers__WEBPACK_IMPORTED_MODULE_4__.BigNumber.from(data.preVerificationGas),\n      verificationGas: ethers__WEBPACK_IMPORTED_MODULE_4__.BigNumber.from(data.verificationGas),\n      verificationGasLimit: ethers__WEBPACK_IMPORTED_MODULE_4__.BigNumber.from(data.verificationGasLimit),\n      callGasLimit: ethers__WEBPACK_IMPORTED_MODULE_4__.BigNumber.from(data.callGasLimit).add(_utils_5fdc349b_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.M)\n    };\n  }\n  async getUserOperationGasPrice() {\n    await this.initializing;\n    return await this.userOpJsonRpcProvider.send(\"thirdweb_getUserOperationGasPrice\", []);\n  }\n  async getUserOperationReceipt(userOpHash) {\n    await this.initializing;\n    return await this.userOpJsonRpcProvider.send(\"eth_getUserOperationReceipt\", [userOpHash]);\n  }\n  async zkPaymasterData(transactionInput) {\n    await this.initializing;\n    return await this.userOpJsonRpcProvider.send(\"zk_paymasterData\", [await hexlifyUserOp({\n      ...transactionInput,\n      gas: transactionInput.gasLimit\n    })]);\n  }\n  async zkBroadcastTransaction(transactionInput) {\n    await this.initializing;\n    return await this.userOpJsonRpcProvider.send(\"zk_broadcastTransaction\", [transactionInput]);\n  }\n  async printUserOperation(method, _ref) {\n    {\n      return;\n    }\n  }\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@thirdweb-dev/wallets/dist/http-rpc-client-29e9bef8.browser.esm.js\n"));

/***/ }),

/***/ "./node_modules/@thirdweb-dev/wallets/dist/zk-connector-9df28418.browser.esm.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@thirdweb-dev/wallets/dist/zk-connector-9df28418.browser.esm.js ***!
  \**************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ZkSyncConnector: function() { return /* binding */ ZkSyncConnector; }\n/* harmony export */ });\n/* harmony import */ var _defineProperty_350fc508_browser_esm_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./defineProperty-350fc508.browser.esm.js */ \"./node_modules/@thirdweb-dev/wallets/dist/defineProperty-350fc508.browser.esm.js\");\n/* harmony import */ var _connector_05689d68_browser_esm_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./connector-05689d68.browser.esm.js */ \"./node_modules/@thirdweb-dev/wallets/dist/connector-05689d68.browser.esm.js\");\n/* harmony import */ var _http_rpc_client_29e9bef8_browser_esm_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./http-rpc-client-29e9bef8.browser.esm.js */ \"./node_modules/@thirdweb-dev/wallets/dist/http-rpc-client-29e9bef8.browser.esm.js\");\n/* harmony import */ var _utils_5fdc349b_browser_esm_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./utils-5fdc349b.browser.esm.js */ \"./node_modules/@thirdweb-dev/wallets/dist/utils-5fdc349b.browser.esm.js\");\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ethers */ \"./node_modules/@ethersproject/abstract-signer/lib.esm/index.js\");\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ethers */ \"./node_modules/@ethersproject/bignumber/lib.esm/bignumber.js\");\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ethers */ \"./node_modules/@ethersproject/bytes/lib.esm/index.js\");\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ethers */ \"./node_modules/@ethersproject/transactions/lib.esm/index.js\");\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ethers */ \"./node_modules/@ethersproject/address/lib.esm/index.js\");\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ethers */ \"./node_modules/@ethersproject/rlp/lib.esm/index.js\");\n/* harmony import */ var ethers_lib_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ethers/lib/utils */ \"./node_modules/ethers/lib/utils.js\");\n/* harmony import */ var ethers_lib_utils__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(ethers_lib_utils__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var eventemitter3__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! eventemitter3 */ \"./node_modules/eventemitter3/index.mjs\");\n/* harmony import */ var _evm_wallets_abstract_dist_thirdweb_dev_wallets_evm_wallets_abstract_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../evm/wallets/abstract/dist/thirdweb-dev-wallets-evm-wallets-abstract.browser.esm.js */ \"./node_modules/@thirdweb-dev/wallets/evm/wallets/abstract/dist/thirdweb-dev-wallets-evm-wallets-abstract.browser.esm.js\");\n/* harmony import */ var _account_abstraction_contracts__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @account-abstraction/contracts */ \"./node_modules/@account-abstraction/contracts/dist/index.js\");\n/* harmony import */ var _account_abstraction_contracts__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_account_abstraction_contracts__WEBPACK_IMPORTED_MODULE_2__);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst DEFAULT_GAS_PER_PUBDATA_LIMIT = 50000;\nconst EIP712_TX_TYPE = 0x71;\nconst EIP712_TYPES = {\n  Transaction: [{\n    name: \"txType\",\n    type: \"uint256\"\n  }, {\n    name: \"from\",\n    type: \"uint256\"\n  }, {\n    name: \"to\",\n    type: \"uint256\"\n  }, {\n    name: \"gasLimit\",\n    type: \"uint256\"\n  }, {\n    name: \"gasPerPubdataByteLimit\",\n    type: \"uint256\"\n  }, {\n    name: \"maxFeePerGas\",\n    type: \"uint256\"\n  }, {\n    name: \"maxPriorityFeePerGas\",\n    type: \"uint256\"\n  }, {\n    name: \"paymaster\",\n    type: \"uint256\"\n  }, {\n    name: \"nonce\",\n    type: \"uint256\"\n  }, {\n    name: \"value\",\n    type: \"uint256\"\n  }, {\n    name: \"data\",\n    type: \"bytes\"\n  }, {\n    name: \"factoryDeps\",\n    type: \"bytes32[]\"\n  }, {\n    name: \"paymasterInput\",\n    type: \"bytes\"\n  }]\n};\nclass ZkWrappedSigner extends ethers__WEBPACK_IMPORTED_MODULE_3__.Signer {\n  constructor(signer, httpRpcClient) {\n    super();\n    this.signer = signer;\n    (0,ethers_lib_utils__WEBPACK_IMPORTED_MODULE_4__.defineReadOnly)(this, \"provider\", signer.provider);\n    this.httpRpcClient = httpRpcClient;\n  }\n  async getAddress() {\n    return await this.signer.getAddress();\n  }\n  async signMessage(message) {\n    return await this.signer.signMessage(message);\n  }\n  async signTransaction(transaction) {\n    return await this.signer.signTransaction(transaction);\n  }\n  connect(provider) {\n    return new ZkWrappedSigner(this.signer.connect(provider), this.httpRpcClient);\n  }\n  _signTypedData(domain, types, value) {\n    return this.signer._signTypedData(domain, types, value);\n  }\n  async sendTransaction(transaction) {\n    return await this.sendZkSyncTransaction(transaction);\n  }\n  async sendZkSyncTransaction(_transaction) {\n    let transaction = await this.populateTransaction(_transaction);\n    if (!transaction.chainId) {\n      throw new Error(\"ChainId is required to send a ZkSync transaction\");\n    }\n    if (!this.provider) {\n      throw new Error(\"Provider is required to send a ZkSync transaction\");\n    }\n    const address = await this.getAddress();\n    const gasLimit = ethers__WEBPACK_IMPORTED_MODULE_5__.BigNumber.from(transaction.gasLimit || (await this.provider.estimateGas(transaction))).mul(3);\n    const gasPrice = ethers__WEBPACK_IMPORTED_MODULE_5__.BigNumber.from(transaction.gasPrice || (await this.provider.getGasPrice())).mul(2);\n    if (!transaction.maxFeePerGas) {\n      transaction.maxFeePerGas = gasPrice;\n    } else {\n      transaction.maxFeePerGas = transaction.maxFeePerGas.mul(2);\n    }\n    if (!transaction.maxPriorityFeePerGas) {\n      transaction.maxPriorityFeePerGas = gasPrice;\n    } else {\n      transaction.maxPriorityFeePerGas = transaction.maxPriorityFeePerGas.mul(2);\n    }\n    transaction = {\n      ...transaction,\n      from: address,\n      gasLimit,\n      gasPrice,\n      chainId: (await this.provider.getNetwork()).chainId,\n      nonce: await this.provider.getTransactionCount(address),\n      type: 113,\n      value: BigInt(0)\n    };\n    const pmDataResult = await this.httpRpcClient?.zkPaymasterData(transaction);\n    transaction.customData = {\n      gasPerPubdata: DEFAULT_GAS_PER_PUBDATA_LIMIT,\n      factoryDeps: [],\n      paymasterParams: {\n        paymaster: pmDataResult.paymaster,\n        paymasterInput: pmDataResult.paymasterInput\n      }\n    };\n    const eip712tx = {\n      txType: EIP712_TX_TYPE,\n      from: BigInt(transaction.from || (await this.getAddress())).toString(),\n      to: BigInt(transaction.to || \"0x0\").toString(),\n      gasLimit: transaction.gasLimit ? Number(transaction.gasLimit) : 0,\n      gasPerPubdataByteLimit: DEFAULT_GAS_PER_PUBDATA_LIMIT,\n      maxFeePerGas: ethers__WEBPACK_IMPORTED_MODULE_5__.BigNumber.from(transaction.maxFeePerGas).toNumber(),\n      maxPriorityFeePerGas: ethers__WEBPACK_IMPORTED_MODULE_5__.BigNumber.from(transaction.maxPriorityFeePerGas).toNumber(),\n      paymaster: BigInt(pmDataResult.paymaster).toString(),\n      nonce: ethers__WEBPACK_IMPORTED_MODULE_5__.BigNumber.from(transaction.nonce).toNumber(),\n      value: ethers__WEBPACK_IMPORTED_MODULE_5__.BigNumber.from(transaction.value).toNumber(),\n      data: transaction.data || \"0x\",\n      factoryDeps: [],\n      paymasterInput: ethers__WEBPACK_IMPORTED_MODULE_6__.arrayify(pmDataResult.paymasterInput)\n    };\n    const signature = await this._signTypedData({\n      name: \"zkSync\",\n      version: \"2\",\n      chainId: transaction.chainId\n    }, EIP712_TYPES, eip712tx);\n    const serializedTx = this.serialize(transaction, signature);\n    const zkSignedTx = {\n      from: transaction.from?.toString() || (await this.getAddress()),\n      to: transaction.to?.toString() || \"\",\n      gas: transaction.gasLimit?.toString() || \"\",\n      maxFeePerGas: transaction.maxFeePerGas?.toString() || \"0\",\n      maxPriorityFeePerGas: transaction.maxPriorityFeePerGas?.toString() || \"0\",\n      signedTransaction: serializedTx,\n      paymaster: pmDataResult.paymaster\n    };\n    const broadcastResult = await this.httpRpcClient?.zkBroadcastTransaction(zkSignedTx);\n    const hash = broadcastResult.transactionHash;\n    return await this.provider?.getTransaction(hash);\n  }\n  serialize(transaction, signature) {\n    if (!transaction.customData && transaction.type !== EIP712_TX_TYPE) {\n      return ethers__WEBPACK_IMPORTED_MODULE_7__.serialize(transaction, signature);\n    }\n    if (!transaction.chainId) {\n      throw Error(\"Transaction chainId isn't set!\");\n    }\n    function formatNumber(value, name) {\n      const result = ethers__WEBPACK_IMPORTED_MODULE_6__.stripZeros(ethers__WEBPACK_IMPORTED_MODULE_5__.BigNumber.from(value).toHexString());\n      if (result.length > 32) {\n        throw new Error(`Invalid length for ${name}!`);\n      }\n      return result;\n    }\n    if (!transaction.from) {\n      throw new Error(\"Explicitly providing `from` field is required for EIP712 transactions!\");\n    }\n    const from = transaction.from;\n    const meta = transaction.customData ?? {};\n    const maxFeePerGas = transaction.maxFeePerGas || transaction.gasPrice || 0;\n    const maxPriorityFeePerGas = transaction.maxPriorityFeePerGas || maxFeePerGas;\n    const fields = [formatNumber(transaction.nonce || 0, \"nonce\"), formatNumber(maxPriorityFeePerGas, \"maxPriorityFeePerGas\"), formatNumber(maxFeePerGas, \"maxFeePerGas\"), formatNumber(transaction.gasLimit || 0, \"gasLimit\"), transaction.to ? ethers__WEBPACK_IMPORTED_MODULE_8__.getAddress(transaction.to) : \"0x\", formatNumber(transaction.value || 0, \"value\"), transaction.data || \"0x\"];\n    if (signature) {\n      const sig = ethers__WEBPACK_IMPORTED_MODULE_6__.splitSignature(signature);\n      fields.push(formatNumber(sig.recoveryParam, \"recoveryParam\"));\n      fields.push(ethers__WEBPACK_IMPORTED_MODULE_6__.stripZeros(sig.r));\n      fields.push(ethers__WEBPACK_IMPORTED_MODULE_6__.stripZeros(sig.s));\n    } else {\n      fields.push(formatNumber(transaction.chainId, \"chainId\"));\n      fields.push(\"0x\");\n      fields.push(\"0x\");\n    }\n    fields.push(formatNumber(transaction.chainId, \"chainId\"));\n    fields.push(ethers__WEBPACK_IMPORTED_MODULE_8__.getAddress(from));\n\n    // Add meta\n    fields.push(formatNumber(meta.gasPerPubdata || DEFAULT_GAS_PER_PUBDATA_LIMIT, \"gasPerPubdata\"));\n    fields.push((meta.factoryDeps ?? []).map(dep => ethers__WEBPACK_IMPORTED_MODULE_6__.hexlify(dep)));\n    if (meta.customSignature && ethers__WEBPACK_IMPORTED_MODULE_6__.arrayify(meta.customSignature).length === 0) {\n      throw new Error(\"Empty signatures are not supported!\");\n    }\n    fields.push(meta.customSignature || \"0x\");\n    if (meta.paymasterParams) {\n      fields.push([meta.paymasterParams.paymaster, ethers__WEBPACK_IMPORTED_MODULE_6__.hexlify(meta.paymasterParams.paymasterInput)]);\n    } else {\n      fields.push([]);\n    }\n    return ethers__WEBPACK_IMPORTED_MODULE_6__.hexConcat([[EIP712_TX_TYPE], ethers__WEBPACK_IMPORTED_MODULE_9__.encode(fields)]);\n  }\n}\n\nclass ZkSyncConnector extends _connector_05689d68_browser_esm_js__WEBPACK_IMPORTED_MODULE_10__.C {\n  constructor(config) {\n    super();\n    (0,_defineProperty_350fc508_browser_esm_js__WEBPACK_IMPORTED_MODULE_11__._)(this, \"chainId\", 1);\n    this.config = config;\n  }\n  async connect(args) {\n    this.personalWallet = args.personalWallet;\n    this.chainId = await (await this.personalWallet.getSigner()).getChainId();\n    if (!(await (0,_utils_5fdc349b_browser_esm_js__WEBPACK_IMPORTED_MODULE_12__.e)(this.chainId))) {\n      throw new Error(\"Invalid zksync chain id\");\n    }\n    const bundlerUrl = this.config.bundlerUrl || `https://${this.chainId}.bundler.thirdweb.com`;\n    const entryPointAddress = this.config.entryPointAddress || _utils_5fdc349b_browser_esm_js__WEBPACK_IMPORTED_MODULE_12__.f;\n    this.httpRpcClient = new _http_rpc_client_29e9bef8_browser_esm_js__WEBPACK_IMPORTED_MODULE_13__.H(bundlerUrl, entryPointAddress, this.chainId, this.config.clientId, this.config.secretKey);\n    return this.getAddress();\n  }\n  disconnect() {\n    throw new Error(\"Method not implemented.\");\n  }\n  async getAddress() {\n    const signer = await this.getSigner();\n    return signer.getAddress();\n  }\n  async getSigner() {\n    if (!this.personalWallet) {\n      throw new Error(\"Wallet not connected\");\n    }\n    return new ZkWrappedSigner(await this.personalWallet.getSigner(), this.httpRpcClient);\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  switchChain(chainId) {\n    throw new Error(\"Method not implemented.\");\n  }\n  isConnected() {\n    return Promise.resolve(!!this.personalWallet);\n  }\n  setupListeners() {\n    throw new Error(\"Method not implemented.\");\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  updateChains(chains) {\n    throw new Error(\"Method not implemented.\");\n  }\n  async getProvider() {\n    if (!this.getSigner()) {\n      throw new Error(\"Personal wallet not connected\");\n    }\n    const signer = await this.getSigner();\n    if (!signer.provider) {\n      throw new Error(\"Provider not found\");\n    }\n    return signer.provider;\n  }\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@thirdweb-dev/wallets/dist/zk-connector-9df28418.browser.esm.js\n"));

/***/ })

}]);